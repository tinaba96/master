// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kerneldl_predict (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_lstm_f_V_address0,
        cnn_lstm_f_V_ce0,
        cnn_lstm_f_V_we0,
        cnn_lstm_f_V_d0,
        cnn_lstm_f_V_q0,
        cnn_lstm_f_V_address1,
        cnn_lstm_f_V_ce1,
        cnn_lstm_f_V_we1,
        cnn_lstm_f_V_d1,
        cnn_lstm_g_V_address0,
        cnn_lstm_g_V_ce0,
        cnn_lstm_g_V_we0,
        cnn_lstm_g_V_d0,
        cnn_lstm_g_V_q0,
        cnn_lstm_g_V_address1,
        cnn_lstm_g_V_ce1,
        cnn_lstm_g_V_we1,
        cnn_lstm_g_V_d1,
        cnn_lstm_i_V_address0,
        cnn_lstm_i_V_ce0,
        cnn_lstm_i_V_we0,
        cnn_lstm_i_V_d0,
        cnn_lstm_i_V_q0,
        cnn_lstm_i_V_address1,
        cnn_lstm_i_V_ce1,
        cnn_lstm_i_V_we1,
        cnn_lstm_i_V_d1,
        cnn_lstm_o_V_address0,
        cnn_lstm_o_V_ce0,
        cnn_lstm_o_V_we0,
        cnn_lstm_o_V_d0,
        cnn_lstm_o_V_q0,
        cnn_lstm_o_V_address1,
        cnn_lstm_o_V_ce1,
        cnn_lstm_o_V_we1,
        cnn_lstm_o_V_d1,
        cnn_lstm_o_V_q1,
        cnn_lstm_cache_V_address0,
        cnn_lstm_cache_V_ce0,
        cnn_lstm_cache_V_we0,
        cnn_lstm_cache_V_d0,
        cnn_lstm_cache_V_address1,
        cnn_lstm_cache_V_ce1,
        cnn_lstm_cache_V_we1,
        cnn_lstm_cache_V_d1,
        cnn_lstm2_f_V_address0,
        cnn_lstm2_f_V_ce0,
        cnn_lstm2_f_V_we0,
        cnn_lstm2_f_V_d0,
        cnn_lstm2_f_V_q0,
        cnn_lstm2_f_V_address1,
        cnn_lstm2_f_V_ce1,
        cnn_lstm2_f_V_we1,
        cnn_lstm2_f_V_d1,
        cnn_lstm2_g_V_address0,
        cnn_lstm2_g_V_ce0,
        cnn_lstm2_g_V_we0,
        cnn_lstm2_g_V_d0,
        cnn_lstm2_g_V_q0,
        cnn_lstm2_g_V_address1,
        cnn_lstm2_g_V_ce1,
        cnn_lstm2_g_V_we1,
        cnn_lstm2_g_V_d1,
        cnn_lstm2_i_V_address0,
        cnn_lstm2_i_V_ce0,
        cnn_lstm2_i_V_we0,
        cnn_lstm2_i_V_d0,
        cnn_lstm2_i_V_q0,
        cnn_lstm2_i_V_address1,
        cnn_lstm2_i_V_ce1,
        cnn_lstm2_i_V_we1,
        cnn_lstm2_i_V_d1,
        cnn_lstm2_o_V_address0,
        cnn_lstm2_o_V_ce0,
        cnn_lstm2_o_V_we0,
        cnn_lstm2_o_V_d0,
        cnn_lstm2_o_V_q0,
        cnn_lstm2_o_V_address1,
        cnn_lstm2_o_V_ce1,
        cnn_lstm2_o_V_we1,
        cnn_lstm2_o_V_d1,
        cnn_lstm2_o_V_q1,
        cnn_lstm2_cache_V_address0,
        cnn_lstm2_cache_V_ce0,
        cnn_lstm2_cache_V_we0,
        cnn_lstm2_cache_V_d0,
        cnn_lstm2_cache_V_address1,
        cnn_lstm2_cache_V_ce1,
        cnn_lstm2_cache_V_we1,
        cnn_lstm2_cache_V_d1,
        x_V_address0,
        x_V_ce0,
        x_V_q0,
        y_V_address0,
        y_V_ce0,
        y_V_we0,
        y_V_d0,
        wxf_V_address0,
        wxf_V_ce0,
        wxf_V_q0,
        wxg_V_address0,
        wxg_V_ce0,
        wxg_V_q0,
        wxi_V_address0,
        wxi_V_ce0,
        wxi_V_q0,
        wxo_V_address0,
        wxo_V_ce0,
        wxo_V_q0,
        whf_V_address0,
        whf_V_ce0,
        whf_V_q0,
        whg_V_address0,
        whg_V_ce0,
        whg_V_q0,
        whi_V_address0,
        whi_V_ce0,
        whi_V_q0,
        who_V_address0,
        who_V_ce0,
        who_V_q0,
        wxf2_V_address0,
        wxf2_V_ce0,
        wxf2_V_q0,
        wxg2_V_address0,
        wxg2_V_ce0,
        wxg2_V_q0,
        wxi2_V_address0,
        wxi2_V_ce0,
        wxi2_V_q0,
        wxo2_V_address0,
        wxo2_V_ce0,
        wxo2_V_q0,
        whf2_V_address0,
        whf2_V_ce0,
        whf2_V_q0,
        whg2_V_address0,
        whg2_V_ce0,
        whg2_V_q0,
        whi2_V_address0,
        whi2_V_ce0,
        whi2_V_q0,
        who2_V_address0,
        who2_V_ce0,
        who2_V_q0,
        bf_V_address0,
        bf_V_ce0,
        bf_V_q0,
        bg_V_address0,
        bg_V_ce0,
        bg_V_q0,
        bi_V_address0,
        bi_V_ce0,
        bi_V_q0,
        bo_V_address0,
        bo_V_ce0,
        bo_V_q0,
        bf2_V_address0,
        bf2_V_ce0,
        bf2_V_q0,
        bg2_V_address0,
        bg2_V_ce0,
        bg2_V_q0,
        bi2_V_address0,
        bi2_V_ce0,
        bi2_V_q0,
        bo2_V_address0,
        bo2_V_ce0,
        bo2_V_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] cnn_lstm_f_V_address0;
output   cnn_lstm_f_V_ce0;
output   cnn_lstm_f_V_we0;
output  [15:0] cnn_lstm_f_V_d0;
input  [15:0] cnn_lstm_f_V_q0;
output  [14:0] cnn_lstm_f_V_address1;
output   cnn_lstm_f_V_ce1;
output   cnn_lstm_f_V_we1;
output  [15:0] cnn_lstm_f_V_d1;
output  [14:0] cnn_lstm_g_V_address0;
output   cnn_lstm_g_V_ce0;
output   cnn_lstm_g_V_we0;
output  [15:0] cnn_lstm_g_V_d0;
input  [15:0] cnn_lstm_g_V_q0;
output  [14:0] cnn_lstm_g_V_address1;
output   cnn_lstm_g_V_ce1;
output   cnn_lstm_g_V_we1;
output  [15:0] cnn_lstm_g_V_d1;
output  [14:0] cnn_lstm_i_V_address0;
output   cnn_lstm_i_V_ce0;
output   cnn_lstm_i_V_we0;
output  [15:0] cnn_lstm_i_V_d0;
input  [15:0] cnn_lstm_i_V_q0;
output  [14:0] cnn_lstm_i_V_address1;
output   cnn_lstm_i_V_ce1;
output   cnn_lstm_i_V_we1;
output  [15:0] cnn_lstm_i_V_d1;
output  [14:0] cnn_lstm_o_V_address0;
output   cnn_lstm_o_V_ce0;
output   cnn_lstm_o_V_we0;
output  [15:0] cnn_lstm_o_V_d0;
input  [15:0] cnn_lstm_o_V_q0;
output  [14:0] cnn_lstm_o_V_address1;
output   cnn_lstm_o_V_ce1;
output   cnn_lstm_o_V_we1;
output  [15:0] cnn_lstm_o_V_d1;
input  [15:0] cnn_lstm_o_V_q1;
output  [17:0] cnn_lstm_cache_V_address0;
output   cnn_lstm_cache_V_ce0;
output   cnn_lstm_cache_V_we0;
output  [15:0] cnn_lstm_cache_V_d0;
output  [17:0] cnn_lstm_cache_V_address1;
output   cnn_lstm_cache_V_ce1;
output   cnn_lstm_cache_V_we1;
output  [15:0] cnn_lstm_cache_V_d1;
output  [14:0] cnn_lstm2_f_V_address0;
output   cnn_lstm2_f_V_ce0;
output   cnn_lstm2_f_V_we0;
output  [15:0] cnn_lstm2_f_V_d0;
input  [15:0] cnn_lstm2_f_V_q0;
output  [14:0] cnn_lstm2_f_V_address1;
output   cnn_lstm2_f_V_ce1;
output   cnn_lstm2_f_V_we1;
output  [15:0] cnn_lstm2_f_V_d1;
output  [14:0] cnn_lstm2_g_V_address0;
output   cnn_lstm2_g_V_ce0;
output   cnn_lstm2_g_V_we0;
output  [15:0] cnn_lstm2_g_V_d0;
input  [15:0] cnn_lstm2_g_V_q0;
output  [14:0] cnn_lstm2_g_V_address1;
output   cnn_lstm2_g_V_ce1;
output   cnn_lstm2_g_V_we1;
output  [15:0] cnn_lstm2_g_V_d1;
output  [14:0] cnn_lstm2_i_V_address0;
output   cnn_lstm2_i_V_ce0;
output   cnn_lstm2_i_V_we0;
output  [15:0] cnn_lstm2_i_V_d0;
input  [15:0] cnn_lstm2_i_V_q0;
output  [14:0] cnn_lstm2_i_V_address1;
output   cnn_lstm2_i_V_ce1;
output   cnn_lstm2_i_V_we1;
output  [15:0] cnn_lstm2_i_V_d1;
output  [14:0] cnn_lstm2_o_V_address0;
output   cnn_lstm2_o_V_ce0;
output   cnn_lstm2_o_V_we0;
output  [15:0] cnn_lstm2_o_V_d0;
input  [15:0] cnn_lstm2_o_V_q0;
output  [14:0] cnn_lstm2_o_V_address1;
output   cnn_lstm2_o_V_ce1;
output   cnn_lstm2_o_V_we1;
output  [15:0] cnn_lstm2_o_V_d1;
input  [15:0] cnn_lstm2_o_V_q1;
output  [17:0] cnn_lstm2_cache_V_address0;
output   cnn_lstm2_cache_V_ce0;
output   cnn_lstm2_cache_V_we0;
output  [15:0] cnn_lstm2_cache_V_d0;
output  [17:0] cnn_lstm2_cache_V_address1;
output   cnn_lstm2_cache_V_ce1;
output   cnn_lstm2_cache_V_we1;
output  [15:0] cnn_lstm2_cache_V_d1;
output  [14:0] x_V_address0;
output   x_V_ce0;
input  [15:0] x_V_q0;
output  [15:0] y_V_address0;
output   y_V_ce0;
output   y_V_we0;
output  [15:0] y_V_d0;
output  [16:0] wxf_V_address0;
output   wxf_V_ce0;
input  [15:0] wxf_V_q0;
output  [16:0] wxg_V_address0;
output   wxg_V_ce0;
input  [15:0] wxg_V_q0;
output  [16:0] wxi_V_address0;
output   wxi_V_ce0;
input  [15:0] wxi_V_q0;
output  [16:0] wxo_V_address0;
output   wxo_V_ce0;
input  [15:0] wxo_V_q0;
output  [16:0] whf_V_address0;
output   whf_V_ce0;
input  [15:0] whf_V_q0;
output  [16:0] whg_V_address0;
output   whg_V_ce0;
input  [15:0] whg_V_q0;
output  [16:0] whi_V_address0;
output   whi_V_ce0;
input  [15:0] whi_V_q0;
output  [16:0] who_V_address0;
output   who_V_ce0;
input  [15:0] who_V_q0;
output  [16:0] wxf2_V_address0;
output   wxf2_V_ce0;
input  [15:0] wxf2_V_q0;
output  [16:0] wxg2_V_address0;
output   wxg2_V_ce0;
input  [15:0] wxg2_V_q0;
output  [16:0] wxi2_V_address0;
output   wxi2_V_ce0;
input  [15:0] wxi2_V_q0;
output  [16:0] wxo2_V_address0;
output   wxo2_V_ce0;
input  [15:0] wxo2_V_q0;
output  [16:0] whf2_V_address0;
output   whf2_V_ce0;
input  [15:0] whf2_V_q0;
output  [16:0] whg2_V_address0;
output   whg2_V_ce0;
input  [15:0] whg2_V_q0;
output  [16:0] whi2_V_address0;
output   whi2_V_ce0;
input  [15:0] whi2_V_q0;
output  [16:0] who2_V_address0;
output   who2_V_ce0;
input  [15:0] who2_V_q0;
output  [8:0] bf_V_address0;
output   bf_V_ce0;
input  [15:0] bf_V_q0;
output  [8:0] bg_V_address0;
output   bg_V_ce0;
input  [15:0] bg_V_q0;
output  [8:0] bi_V_address0;
output   bi_V_ce0;
input  [15:0] bi_V_q0;
output  [8:0] bo_V_address0;
output   bo_V_ce0;
input  [15:0] bo_V_q0;
output  [8:0] bf2_V_address0;
output   bf2_V_ce0;
input  [15:0] bf2_V_q0;
output  [8:0] bg2_V_address0;
output   bg2_V_ce0;
input  [15:0] bg2_V_q0;
output  [8:0] bi2_V_address0;
output   bi2_V_ce0;
input  [15:0] bi2_V_q0;
output  [8:0] bo2_V_address0;
output   bo2_V_ce0;
input  [15:0] bo2_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cnn_lstm_f_V_ce0;
reg cnn_lstm_f_V_we0;
reg cnn_lstm_f_V_ce1;
reg cnn_lstm_f_V_we1;
reg cnn_lstm_g_V_ce0;
reg cnn_lstm_g_V_we0;
reg cnn_lstm_g_V_ce1;
reg cnn_lstm_g_V_we1;
reg cnn_lstm_i_V_ce0;
reg cnn_lstm_i_V_we0;
reg cnn_lstm_i_V_ce1;
reg cnn_lstm_i_V_we1;
reg cnn_lstm_o_V_ce0;
reg cnn_lstm_o_V_we0;
reg cnn_lstm_o_V_ce1;
reg cnn_lstm_o_V_we1;
reg cnn_lstm_cache_V_ce0;
reg cnn_lstm_cache_V_we0;
reg cnn_lstm_cache_V_ce1;
reg cnn_lstm_cache_V_we1;
reg cnn_lstm2_f_V_ce0;
reg cnn_lstm2_f_V_we0;
reg cnn_lstm2_f_V_ce1;
reg cnn_lstm2_f_V_we1;
reg cnn_lstm2_g_V_ce0;
reg cnn_lstm2_g_V_we0;
reg cnn_lstm2_g_V_ce1;
reg cnn_lstm2_g_V_we1;
reg cnn_lstm2_i_V_ce0;
reg cnn_lstm2_i_V_we0;
reg cnn_lstm2_i_V_ce1;
reg cnn_lstm2_i_V_we1;
reg cnn_lstm2_o_V_ce0;
reg cnn_lstm2_o_V_we0;
reg cnn_lstm2_o_V_ce1;
reg cnn_lstm2_o_V_we1;
reg cnn_lstm2_cache_V_ce0;
reg cnn_lstm2_cache_V_we0;
reg cnn_lstm2_cache_V_ce1;
reg cnn_lstm2_cache_V_we1;
reg x_V_ce0;
reg y_V_ce0;
reg y_V_we0;
reg wxf_V_ce0;
reg wxg_V_ce0;
reg wxi_V_ce0;
reg wxo_V_ce0;
reg whf_V_ce0;
reg whg_V_ce0;
reg whi_V_ce0;
reg who_V_ce0;
reg wxf2_V_ce0;
reg wxg2_V_ce0;
reg wxi2_V_ce0;
reg wxo2_V_ce0;
reg whf2_V_ce0;
reg whg2_V_ce0;
reg whi2_V_ce0;
reg who2_V_ce0;
reg bf_V_ce0;
reg bg_V_ce0;
reg bi_V_ce0;
reg bo_V_ce0;
reg bf2_V_ce0;
reg bg2_V_ce0;
reg bi2_V_ce0;
reg bo2_V_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] i_fu_318_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln532_fu_330_p2;
wire    ap_CS_fsm_state4;
wire   [6:0] t_fu_336_p2;
reg   [6:0] t_reg_384;
wire   [8:0] i_1_fu_348_p2;
wire    ap_CS_fsm_state6;
wire   [6:0] t_1_fu_366_p2;
reg   [6:0] t_1_reg_400;
wire    ap_CS_fsm_state8;
reg   [8:0] h_next_V_address0;
reg    h_next_V_ce0;
reg    h_next_V_we0;
reg   [15:0] h_next_V_d0;
wire   [15:0] h_next_V_q0;
reg   [8:0] c_next_V_address0;
reg    c_next_V_ce0;
reg    c_next_V_we0;
reg   [15:0] c_next_V_d0;
wire   [15:0] c_next_V_q0;
wire    grp_forward_fu_224_ap_start;
wire    grp_forward_fu_224_ap_done;
wire    grp_forward_fu_224_ap_idle;
wire    grp_forward_fu_224_ap_ready;
wire   [14:0] grp_forward_fu_224_LSTM_f_V_address0;
wire    grp_forward_fu_224_LSTM_f_V_ce0;
wire    grp_forward_fu_224_LSTM_f_V_we0;
wire   [15:0] grp_forward_fu_224_LSTM_f_V_d0;
reg   [15:0] grp_forward_fu_224_LSTM_f_V_q0;
wire   [14:0] grp_forward_fu_224_LSTM_f_V_address1;
wire    grp_forward_fu_224_LSTM_f_V_ce1;
wire    grp_forward_fu_224_LSTM_f_V_we1;
wire   [15:0] grp_forward_fu_224_LSTM_f_V_d1;
reg   [6:0] grp_forward_fu_224_LSTM_f_V_offset;
wire   [14:0] grp_forward_fu_224_LSTM_g_V_address0;
wire    grp_forward_fu_224_LSTM_g_V_ce0;
wire    grp_forward_fu_224_LSTM_g_V_we0;
wire   [15:0] grp_forward_fu_224_LSTM_g_V_d0;
reg   [15:0] grp_forward_fu_224_LSTM_g_V_q0;
wire   [14:0] grp_forward_fu_224_LSTM_g_V_address1;
wire    grp_forward_fu_224_LSTM_g_V_ce1;
wire    grp_forward_fu_224_LSTM_g_V_we1;
wire   [15:0] grp_forward_fu_224_LSTM_g_V_d1;
reg   [6:0] grp_forward_fu_224_LSTM_g_V_offset;
wire   [14:0] grp_forward_fu_224_LSTM_i_V_address0;
wire    grp_forward_fu_224_LSTM_i_V_ce0;
wire    grp_forward_fu_224_LSTM_i_V_we0;
wire   [15:0] grp_forward_fu_224_LSTM_i_V_d0;
reg   [15:0] grp_forward_fu_224_LSTM_i_V_q0;
wire   [14:0] grp_forward_fu_224_LSTM_i_V_address1;
wire    grp_forward_fu_224_LSTM_i_V_ce1;
wire    grp_forward_fu_224_LSTM_i_V_we1;
wire   [15:0] grp_forward_fu_224_LSTM_i_V_d1;
reg   [6:0] grp_forward_fu_224_LSTM_i_V_offset;
wire   [14:0] grp_forward_fu_224_LSTM_o_V_address0;
wire    grp_forward_fu_224_LSTM_o_V_ce0;
wire    grp_forward_fu_224_LSTM_o_V_we0;
wire   [15:0] grp_forward_fu_224_LSTM_o_V_d0;
reg   [15:0] grp_forward_fu_224_LSTM_o_V_q0;
wire   [14:0] grp_forward_fu_224_LSTM_o_V_address1;
wire    grp_forward_fu_224_LSTM_o_V_ce1;
wire    grp_forward_fu_224_LSTM_o_V_we1;
wire   [15:0] grp_forward_fu_224_LSTM_o_V_d1;
reg   [15:0] grp_forward_fu_224_LSTM_o_V_q1;
reg   [6:0] grp_forward_fu_224_LSTM_o_V_offset;
wire   [17:0] grp_forward_fu_224_LSTM_cache_V_address0;
wire    grp_forward_fu_224_LSTM_cache_V_ce0;
wire    grp_forward_fu_224_LSTM_cache_V_we0;
wire   [15:0] grp_forward_fu_224_LSTM_cache_V_d0;
wire   [17:0] grp_forward_fu_224_LSTM_cache_V_address1;
wire    grp_forward_fu_224_LSTM_cache_V_ce1;
wire    grp_forward_fu_224_LSTM_cache_V_we1;
wire   [15:0] grp_forward_fu_224_LSTM_cache_V_d1;
reg   [6:0] grp_forward_fu_224_LSTM_cache_V_offset;
reg   [7:0] grp_forward_fu_224_flag;
reg   [6:0] grp_forward_fu_224_t;
wire   [14:0] grp_forward_fu_224_x_V_address0;
wire    grp_forward_fu_224_x_V_ce0;
wire   [15:0] grp_forward_fu_224_y_V_address0;
wire    grp_forward_fu_224_y_V_ce0;
wire    grp_forward_fu_224_y_V_we0;
wire   [15:0] grp_forward_fu_224_y_V_d0;
wire   [8:0] grp_forward_fu_224_h_next_V_address0;
wire    grp_forward_fu_224_h_next_V_ce0;
wire    grp_forward_fu_224_h_next_V_we0;
wire   [15:0] grp_forward_fu_224_h_next_V_d0;
wire   [8:0] grp_forward_fu_224_c_next_V_address0;
wire    grp_forward_fu_224_c_next_V_ce0;
wire    grp_forward_fu_224_c_next_V_we0;
wire   [15:0] grp_forward_fu_224_c_next_V_d0;
wire   [16:0] grp_forward_fu_224_wxf_V_address0;
wire    grp_forward_fu_224_wxf_V_ce0;
reg   [15:0] grp_forward_fu_224_wxf_V_q0;
wire   [16:0] grp_forward_fu_224_wxg_V_address0;
wire    grp_forward_fu_224_wxg_V_ce0;
reg   [15:0] grp_forward_fu_224_wxg_V_q0;
wire   [16:0] grp_forward_fu_224_wxi_V_address0;
wire    grp_forward_fu_224_wxi_V_ce0;
reg   [15:0] grp_forward_fu_224_wxi_V_q0;
wire   [16:0] grp_forward_fu_224_wxo_V_address0;
wire    grp_forward_fu_224_wxo_V_ce0;
reg   [15:0] grp_forward_fu_224_wxo_V_q0;
wire   [16:0] grp_forward_fu_224_whf_V_address0;
wire    grp_forward_fu_224_whf_V_ce0;
reg   [15:0] grp_forward_fu_224_whf_V_q0;
wire   [16:0] grp_forward_fu_224_whg_V_address0;
wire    grp_forward_fu_224_whg_V_ce0;
reg   [15:0] grp_forward_fu_224_whg_V_q0;
wire   [16:0] grp_forward_fu_224_whi_V_address0;
wire    grp_forward_fu_224_whi_V_ce0;
reg   [15:0] grp_forward_fu_224_whi_V_q0;
wire   [16:0] grp_forward_fu_224_who_V_address0;
wire    grp_forward_fu_224_who_V_ce0;
reg   [15:0] grp_forward_fu_224_who_V_q0;
wire   [8:0] grp_forward_fu_224_bf_V_address0;
wire    grp_forward_fu_224_bf_V_ce0;
reg   [15:0] grp_forward_fu_224_bf_V_q0;
wire   [8:0] grp_forward_fu_224_bg_V_address0;
wire    grp_forward_fu_224_bg_V_ce0;
reg   [15:0] grp_forward_fu_224_bg_V_q0;
wire   [8:0] grp_forward_fu_224_bi_V_address0;
wire    grp_forward_fu_224_bi_V_ce0;
reg   [15:0] grp_forward_fu_224_bi_V_q0;
wire   [8:0] grp_forward_fu_224_bo_V_address0;
wire    grp_forward_fu_224_bo_V_ce0;
reg   [15:0] grp_forward_fu_224_bo_V_q0;
reg   [8:0] i_0_reg_178;
wire   [0:0] icmp_ln522_fu_312_p2;
reg   [6:0] t_0_reg_189;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state3;
reg   [8:0] i2_0_reg_201;
wire   [0:0] icmp_ln543_fu_342_p2;
reg   [6:0] t3_0_reg_212;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state7;
reg    grp_forward_fu_224_ap_start_reg;
wire   [0:0] icmp_ln551_fu_360_p2;
wire   [63:0] zext_ln524_fu_324_p1;
wire   [63:0] zext_ln545_fu_354_p1;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_forward_fu_224_ap_start_reg = 1'b0;
end

kerneldl_backward_di_V #(
    .DataWidth( 16 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
h_next_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_next_V_address0),
    .ce0(h_next_V_ce0),
    .we0(h_next_V_we0),
    .d0(h_next_V_d0),
    .q0(h_next_V_q0)
);

kerneldl_backward_di_V #(
    .DataWidth( 16 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
c_next_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_next_V_address0),
    .ce0(c_next_V_ce0),
    .we0(c_next_V_we0),
    .d0(c_next_V_d0),
    .q0(c_next_V_q0)
);

kerneldl_forward grp_forward_fu_224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_forward_fu_224_ap_start),
    .ap_done(grp_forward_fu_224_ap_done),
    .ap_idle(grp_forward_fu_224_ap_idle),
    .ap_ready(grp_forward_fu_224_ap_ready),
    .LSTM_f_V_address0(grp_forward_fu_224_LSTM_f_V_address0),
    .LSTM_f_V_ce0(grp_forward_fu_224_LSTM_f_V_ce0),
    .LSTM_f_V_we0(grp_forward_fu_224_LSTM_f_V_we0),
    .LSTM_f_V_d0(grp_forward_fu_224_LSTM_f_V_d0),
    .LSTM_f_V_q0(grp_forward_fu_224_LSTM_f_V_q0),
    .LSTM_f_V_address1(grp_forward_fu_224_LSTM_f_V_address1),
    .LSTM_f_V_ce1(grp_forward_fu_224_LSTM_f_V_ce1),
    .LSTM_f_V_we1(grp_forward_fu_224_LSTM_f_V_we1),
    .LSTM_f_V_d1(grp_forward_fu_224_LSTM_f_V_d1),
    .LSTM_f_V_offset(grp_forward_fu_224_LSTM_f_V_offset),
    .LSTM_g_V_address0(grp_forward_fu_224_LSTM_g_V_address0),
    .LSTM_g_V_ce0(grp_forward_fu_224_LSTM_g_V_ce0),
    .LSTM_g_V_we0(grp_forward_fu_224_LSTM_g_V_we0),
    .LSTM_g_V_d0(grp_forward_fu_224_LSTM_g_V_d0),
    .LSTM_g_V_q0(grp_forward_fu_224_LSTM_g_V_q0),
    .LSTM_g_V_address1(grp_forward_fu_224_LSTM_g_V_address1),
    .LSTM_g_V_ce1(grp_forward_fu_224_LSTM_g_V_ce1),
    .LSTM_g_V_we1(grp_forward_fu_224_LSTM_g_V_we1),
    .LSTM_g_V_d1(grp_forward_fu_224_LSTM_g_V_d1),
    .LSTM_g_V_offset(grp_forward_fu_224_LSTM_g_V_offset),
    .LSTM_i_V_address0(grp_forward_fu_224_LSTM_i_V_address0),
    .LSTM_i_V_ce0(grp_forward_fu_224_LSTM_i_V_ce0),
    .LSTM_i_V_we0(grp_forward_fu_224_LSTM_i_V_we0),
    .LSTM_i_V_d0(grp_forward_fu_224_LSTM_i_V_d0),
    .LSTM_i_V_q0(grp_forward_fu_224_LSTM_i_V_q0),
    .LSTM_i_V_address1(grp_forward_fu_224_LSTM_i_V_address1),
    .LSTM_i_V_ce1(grp_forward_fu_224_LSTM_i_V_ce1),
    .LSTM_i_V_we1(grp_forward_fu_224_LSTM_i_V_we1),
    .LSTM_i_V_d1(grp_forward_fu_224_LSTM_i_V_d1),
    .LSTM_i_V_offset(grp_forward_fu_224_LSTM_i_V_offset),
    .LSTM_o_V_address0(grp_forward_fu_224_LSTM_o_V_address0),
    .LSTM_o_V_ce0(grp_forward_fu_224_LSTM_o_V_ce0),
    .LSTM_o_V_we0(grp_forward_fu_224_LSTM_o_V_we0),
    .LSTM_o_V_d0(grp_forward_fu_224_LSTM_o_V_d0),
    .LSTM_o_V_q0(grp_forward_fu_224_LSTM_o_V_q0),
    .LSTM_o_V_address1(grp_forward_fu_224_LSTM_o_V_address1),
    .LSTM_o_V_ce1(grp_forward_fu_224_LSTM_o_V_ce1),
    .LSTM_o_V_we1(grp_forward_fu_224_LSTM_o_V_we1),
    .LSTM_o_V_d1(grp_forward_fu_224_LSTM_o_V_d1),
    .LSTM_o_V_q1(grp_forward_fu_224_LSTM_o_V_q1),
    .LSTM_o_V_offset(grp_forward_fu_224_LSTM_o_V_offset),
    .LSTM_cache_V_address0(grp_forward_fu_224_LSTM_cache_V_address0),
    .LSTM_cache_V_ce0(grp_forward_fu_224_LSTM_cache_V_ce0),
    .LSTM_cache_V_we0(grp_forward_fu_224_LSTM_cache_V_we0),
    .LSTM_cache_V_d0(grp_forward_fu_224_LSTM_cache_V_d0),
    .LSTM_cache_V_address1(grp_forward_fu_224_LSTM_cache_V_address1),
    .LSTM_cache_V_ce1(grp_forward_fu_224_LSTM_cache_V_ce1),
    .LSTM_cache_V_we1(grp_forward_fu_224_LSTM_cache_V_we1),
    .LSTM_cache_V_d1(grp_forward_fu_224_LSTM_cache_V_d1),
    .LSTM_cache_V_offset(grp_forward_fu_224_LSTM_cache_V_offset),
    .flag(grp_forward_fu_224_flag),
    .t(grp_forward_fu_224_t),
    .x_V_address0(grp_forward_fu_224_x_V_address0),
    .x_V_ce0(grp_forward_fu_224_x_V_ce0),
    .x_V_q0(x_V_q0),
    .y_V_address0(grp_forward_fu_224_y_V_address0),
    .y_V_ce0(grp_forward_fu_224_y_V_ce0),
    .y_V_we0(grp_forward_fu_224_y_V_we0),
    .y_V_d0(grp_forward_fu_224_y_V_d0),
    .h_next_V_address0(grp_forward_fu_224_h_next_V_address0),
    .h_next_V_ce0(grp_forward_fu_224_h_next_V_ce0),
    .h_next_V_we0(grp_forward_fu_224_h_next_V_we0),
    .h_next_V_d0(grp_forward_fu_224_h_next_V_d0),
    .h_next_V_q0(h_next_V_q0),
    .c_next_V_address0(grp_forward_fu_224_c_next_V_address0),
    .c_next_V_ce0(grp_forward_fu_224_c_next_V_ce0),
    .c_next_V_we0(grp_forward_fu_224_c_next_V_we0),
    .c_next_V_d0(grp_forward_fu_224_c_next_V_d0),
    .c_next_V_q0(c_next_V_q0),
    .wxf_V_address0(grp_forward_fu_224_wxf_V_address0),
    .wxf_V_ce0(grp_forward_fu_224_wxf_V_ce0),
    .wxf_V_q0(grp_forward_fu_224_wxf_V_q0),
    .wxg_V_address0(grp_forward_fu_224_wxg_V_address0),
    .wxg_V_ce0(grp_forward_fu_224_wxg_V_ce0),
    .wxg_V_q0(grp_forward_fu_224_wxg_V_q0),
    .wxi_V_address0(grp_forward_fu_224_wxi_V_address0),
    .wxi_V_ce0(grp_forward_fu_224_wxi_V_ce0),
    .wxi_V_q0(grp_forward_fu_224_wxi_V_q0),
    .wxo_V_address0(grp_forward_fu_224_wxo_V_address0),
    .wxo_V_ce0(grp_forward_fu_224_wxo_V_ce0),
    .wxo_V_q0(grp_forward_fu_224_wxo_V_q0),
    .whf_V_address0(grp_forward_fu_224_whf_V_address0),
    .whf_V_ce0(grp_forward_fu_224_whf_V_ce0),
    .whf_V_q0(grp_forward_fu_224_whf_V_q0),
    .whg_V_address0(grp_forward_fu_224_whg_V_address0),
    .whg_V_ce0(grp_forward_fu_224_whg_V_ce0),
    .whg_V_q0(grp_forward_fu_224_whg_V_q0),
    .whi_V_address0(grp_forward_fu_224_whi_V_address0),
    .whi_V_ce0(grp_forward_fu_224_whi_V_ce0),
    .whi_V_q0(grp_forward_fu_224_whi_V_q0),
    .who_V_address0(grp_forward_fu_224_who_V_address0),
    .who_V_ce0(grp_forward_fu_224_who_V_ce0),
    .who_V_q0(grp_forward_fu_224_who_V_q0),
    .bf_V_address0(grp_forward_fu_224_bf_V_address0),
    .bf_V_ce0(grp_forward_fu_224_bf_V_ce0),
    .bf_V_q0(grp_forward_fu_224_bf_V_q0),
    .bg_V_address0(grp_forward_fu_224_bg_V_address0),
    .bg_V_ce0(grp_forward_fu_224_bg_V_ce0),
    .bg_V_q0(grp_forward_fu_224_bg_V_q0),
    .bi_V_address0(grp_forward_fu_224_bi_V_address0),
    .bi_V_ce0(grp_forward_fu_224_bi_V_ce0),
    .bi_V_q0(grp_forward_fu_224_bi_V_q0),
    .bo_V_address0(grp_forward_fu_224_bo_V_address0),
    .bo_V_ce0(grp_forward_fu_224_bo_V_ce0),
    .bo_V_q0(grp_forward_fu_224_bo_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_forward_fu_224_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln551_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln532_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_forward_fu_224_ap_start_reg <= 1'b1;
        end else if ((grp_forward_fu_224_ap_ready == 1'b1)) begin
            grp_forward_fu_224_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln532_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i2_0_reg_201 <= 9'd0;
    end else if (((icmp_ln543_fu_342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i2_0_reg_201 <= i_1_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_178 <= 9'd0;
    end else if (((icmp_ln522_fu_312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_178 <= i_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        t3_0_reg_212 <= 7'd0;
    end else if (((grp_forward_fu_224_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        t3_0_reg_212 <= t_1_reg_400;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        t_0_reg_189 <= 7'd0;
    end else if (((grp_forward_fu_224_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        t_0_reg_189 <= t_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_1_reg_400 <= t_1_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        t_reg_384 <= t_fu_336_p2;
    end
end

always @ (*) begin
    if ((((icmp_ln551_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln551_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bf2_V_ce0 = grp_forward_fu_224_bf_V_ce0;
    end else begin
        bf2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bf_V_ce0 = grp_forward_fu_224_bf_V_ce0;
    end else begin
        bf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bg2_V_ce0 = grp_forward_fu_224_bg_V_ce0;
    end else begin
        bg2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bg_V_ce0 = grp_forward_fu_224_bg_V_ce0;
    end else begin
        bg_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bi2_V_ce0 = grp_forward_fu_224_bi_V_ce0;
    end else begin
        bi2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bi_V_ce0 = grp_forward_fu_224_bi_V_ce0;
    end else begin
        bi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bo2_V_ce0 = grp_forward_fu_224_bo_V_ce0;
    end else begin
        bo2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bo_V_ce0 = grp_forward_fu_224_bo_V_ce0;
    end else begin
        bo_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c_next_V_address0 = zext_ln545_fu_354_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c_next_V_address0 = zext_ln524_fu_324_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        c_next_V_address0 = grp_forward_fu_224_c_next_V_address0;
    end else begin
        c_next_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        c_next_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        c_next_V_ce0 = grp_forward_fu_224_c_next_V_ce0;
    end else begin
        c_next_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        c_next_V_d0 = 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        c_next_V_d0 = grp_forward_fu_224_c_next_V_d0;
    end else begin
        c_next_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln543_fu_342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln522_fu_312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        c_next_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        c_next_V_we0 = grp_forward_fu_224_c_next_V_we0;
    end else begin
        c_next_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_cache_V_ce0 = grp_forward_fu_224_LSTM_cache_V_ce0;
    end else begin
        cnn_lstm2_cache_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_cache_V_ce1 = grp_forward_fu_224_LSTM_cache_V_ce1;
    end else begin
        cnn_lstm2_cache_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_cache_V_we0 = grp_forward_fu_224_LSTM_cache_V_we0;
    end else begin
        cnn_lstm2_cache_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_cache_V_we1 = grp_forward_fu_224_LSTM_cache_V_we1;
    end else begin
        cnn_lstm2_cache_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_f_V_ce0 = grp_forward_fu_224_LSTM_f_V_ce0;
    end else begin
        cnn_lstm2_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_f_V_ce1 = grp_forward_fu_224_LSTM_f_V_ce1;
    end else begin
        cnn_lstm2_f_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_f_V_we0 = grp_forward_fu_224_LSTM_f_V_we0;
    end else begin
        cnn_lstm2_f_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_f_V_we1 = grp_forward_fu_224_LSTM_f_V_we1;
    end else begin
        cnn_lstm2_f_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_g_V_ce0 = grp_forward_fu_224_LSTM_g_V_ce0;
    end else begin
        cnn_lstm2_g_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_g_V_ce1 = grp_forward_fu_224_LSTM_g_V_ce1;
    end else begin
        cnn_lstm2_g_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_g_V_we0 = grp_forward_fu_224_LSTM_g_V_we0;
    end else begin
        cnn_lstm2_g_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_g_V_we1 = grp_forward_fu_224_LSTM_g_V_we1;
    end else begin
        cnn_lstm2_g_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_i_V_ce0 = grp_forward_fu_224_LSTM_i_V_ce0;
    end else begin
        cnn_lstm2_i_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_i_V_ce1 = grp_forward_fu_224_LSTM_i_V_ce1;
    end else begin
        cnn_lstm2_i_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_i_V_we0 = grp_forward_fu_224_LSTM_i_V_we0;
    end else begin
        cnn_lstm2_i_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_i_V_we1 = grp_forward_fu_224_LSTM_i_V_we1;
    end else begin
        cnn_lstm2_i_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_o_V_ce0 = grp_forward_fu_224_LSTM_o_V_ce0;
    end else begin
        cnn_lstm2_o_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_o_V_ce1 = grp_forward_fu_224_LSTM_o_V_ce1;
    end else begin
        cnn_lstm2_o_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_o_V_we0 = grp_forward_fu_224_LSTM_o_V_we0;
    end else begin
        cnn_lstm2_o_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cnn_lstm2_o_V_we1 = grp_forward_fu_224_LSTM_o_V_we1;
    end else begin
        cnn_lstm2_o_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_cache_V_ce0 = grp_forward_fu_224_LSTM_cache_V_ce0;
    end else begin
        cnn_lstm_cache_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_cache_V_ce1 = grp_forward_fu_224_LSTM_cache_V_ce1;
    end else begin
        cnn_lstm_cache_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_cache_V_we0 = grp_forward_fu_224_LSTM_cache_V_we0;
    end else begin
        cnn_lstm_cache_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_cache_V_we1 = grp_forward_fu_224_LSTM_cache_V_we1;
    end else begin
        cnn_lstm_cache_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_f_V_ce0 = grp_forward_fu_224_LSTM_f_V_ce0;
    end else begin
        cnn_lstm_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_f_V_ce1 = grp_forward_fu_224_LSTM_f_V_ce1;
    end else begin
        cnn_lstm_f_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_f_V_we0 = grp_forward_fu_224_LSTM_f_V_we0;
    end else begin
        cnn_lstm_f_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_f_V_we1 = grp_forward_fu_224_LSTM_f_V_we1;
    end else begin
        cnn_lstm_f_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_g_V_ce0 = grp_forward_fu_224_LSTM_g_V_ce0;
    end else begin
        cnn_lstm_g_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_g_V_ce1 = grp_forward_fu_224_LSTM_g_V_ce1;
    end else begin
        cnn_lstm_g_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_g_V_we0 = grp_forward_fu_224_LSTM_g_V_we0;
    end else begin
        cnn_lstm_g_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_g_V_we1 = grp_forward_fu_224_LSTM_g_V_we1;
    end else begin
        cnn_lstm_g_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_i_V_ce0 = grp_forward_fu_224_LSTM_i_V_ce0;
    end else begin
        cnn_lstm_i_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_i_V_ce1 = grp_forward_fu_224_LSTM_i_V_ce1;
    end else begin
        cnn_lstm_i_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_i_V_we0 = grp_forward_fu_224_LSTM_i_V_we0;
    end else begin
        cnn_lstm_i_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_i_V_we1 = grp_forward_fu_224_LSTM_i_V_we1;
    end else begin
        cnn_lstm_i_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_o_V_ce0 = grp_forward_fu_224_LSTM_o_V_ce0;
    end else begin
        cnn_lstm_o_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_o_V_ce1 = grp_forward_fu_224_LSTM_o_V_ce1;
    end else begin
        cnn_lstm_o_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_o_V_we0 = grp_forward_fu_224_LSTM_o_V_we0;
    end else begin
        cnn_lstm_o_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cnn_lstm_o_V_we1 = grp_forward_fu_224_LSTM_o_V_we1;
    end else begin
        cnn_lstm_o_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_cache_V_offset = t3_0_reg_212;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_cache_V_offset = t_0_reg_189;
    end else begin
        grp_forward_fu_224_LSTM_cache_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_f_V_offset = t3_0_reg_212;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_f_V_offset = t_0_reg_189;
    end else begin
        grp_forward_fu_224_LSTM_f_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_f_V_q0 = cnn_lstm2_f_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_f_V_q0 = cnn_lstm_f_V_q0;
    end else begin
        grp_forward_fu_224_LSTM_f_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_g_V_offset = t3_0_reg_212;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_g_V_offset = t_0_reg_189;
    end else begin
        grp_forward_fu_224_LSTM_g_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_g_V_q0 = cnn_lstm2_g_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_g_V_q0 = cnn_lstm_g_V_q0;
    end else begin
        grp_forward_fu_224_LSTM_g_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_i_V_offset = t3_0_reg_212;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_i_V_offset = t_0_reg_189;
    end else begin
        grp_forward_fu_224_LSTM_i_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_i_V_q0 = cnn_lstm2_i_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_i_V_q0 = cnn_lstm_i_V_q0;
    end else begin
        grp_forward_fu_224_LSTM_i_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_o_V_offset = t3_0_reg_212;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_o_V_offset = t_0_reg_189;
    end else begin
        grp_forward_fu_224_LSTM_o_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_o_V_q0 = cnn_lstm2_o_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_o_V_q0 = cnn_lstm_o_V_q0;
    end else begin
        grp_forward_fu_224_LSTM_o_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_LSTM_o_V_q1 = cnn_lstm2_o_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_LSTM_o_V_q1 = cnn_lstm_o_V_q1;
    end else begin
        grp_forward_fu_224_LSTM_o_V_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_bf_V_q0 = bf2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_bf_V_q0 = bf_V_q0;
    end else begin
        grp_forward_fu_224_bf_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_bg_V_q0 = bg2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_bg_V_q0 = bg_V_q0;
    end else begin
        grp_forward_fu_224_bg_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_bi_V_q0 = bi2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_bi_V_q0 = bi_V_q0;
    end else begin
        grp_forward_fu_224_bi_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_bo_V_q0 = bo2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_bo_V_q0 = bo_V_q0;
    end else begin
        grp_forward_fu_224_bo_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_flag = 8'd116;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_flag = 8'd111;
    end else begin
        grp_forward_fu_224_flag = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_t = t3_0_reg_212;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_t = t_0_reg_189;
    end else begin
        grp_forward_fu_224_t = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_whf_V_q0 = whf2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_whf_V_q0 = whf_V_q0;
    end else begin
        grp_forward_fu_224_whf_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_whg_V_q0 = whg2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_whg_V_q0 = whg_V_q0;
    end else begin
        grp_forward_fu_224_whg_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_whi_V_q0 = whi2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_whi_V_q0 = whi_V_q0;
    end else begin
        grp_forward_fu_224_whi_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_who_V_q0 = who2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_who_V_q0 = who_V_q0;
    end else begin
        grp_forward_fu_224_who_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_wxf_V_q0 = wxf2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_wxf_V_q0 = wxf_V_q0;
    end else begin
        grp_forward_fu_224_wxf_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_wxg_V_q0 = wxg2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_wxg_V_q0 = wxg_V_q0;
    end else begin
        grp_forward_fu_224_wxg_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_wxi_V_q0 = wxi2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_wxi_V_q0 = wxi_V_q0;
    end else begin
        grp_forward_fu_224_wxi_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_forward_fu_224_wxo_V_q0 = wxo2_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_forward_fu_224_wxo_V_q0 = wxo_V_q0;
    end else begin
        grp_forward_fu_224_wxo_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h_next_V_address0 = zext_ln545_fu_354_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        h_next_V_address0 = zext_ln524_fu_324_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        h_next_V_address0 = grp_forward_fu_224_h_next_V_address0;
    end else begin
        h_next_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        h_next_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        h_next_V_ce0 = grp_forward_fu_224_h_next_V_ce0;
    end else begin
        h_next_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        h_next_V_d0 = 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        h_next_V_d0 = grp_forward_fu_224_h_next_V_d0;
    end else begin
        h_next_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln543_fu_342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln522_fu_312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        h_next_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        h_next_V_we0 = grp_forward_fu_224_h_next_V_we0;
    end else begin
        h_next_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        whf2_V_ce0 = grp_forward_fu_224_whf_V_ce0;
    end else begin
        whf2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        whf_V_ce0 = grp_forward_fu_224_whf_V_ce0;
    end else begin
        whf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        whg2_V_ce0 = grp_forward_fu_224_whg_V_ce0;
    end else begin
        whg2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        whg_V_ce0 = grp_forward_fu_224_whg_V_ce0;
    end else begin
        whg_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        whi2_V_ce0 = grp_forward_fu_224_whi_V_ce0;
    end else begin
        whi2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        whi_V_ce0 = grp_forward_fu_224_whi_V_ce0;
    end else begin
        whi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        who2_V_ce0 = grp_forward_fu_224_who_V_ce0;
    end else begin
        who2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        who_V_ce0 = grp_forward_fu_224_who_V_ce0;
    end else begin
        who_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        wxf2_V_ce0 = grp_forward_fu_224_wxf_V_ce0;
    end else begin
        wxf2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wxf_V_ce0 = grp_forward_fu_224_wxf_V_ce0;
    end else begin
        wxf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        wxg2_V_ce0 = grp_forward_fu_224_wxg_V_ce0;
    end else begin
        wxg2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wxg_V_ce0 = grp_forward_fu_224_wxg_V_ce0;
    end else begin
        wxg_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        wxi2_V_ce0 = grp_forward_fu_224_wxi_V_ce0;
    end else begin
        wxi2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wxi_V_ce0 = grp_forward_fu_224_wxi_V_ce0;
    end else begin
        wxi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        wxo2_V_ce0 = grp_forward_fu_224_wxo_V_ce0;
    end else begin
        wxo2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wxo_V_ce0 = grp_forward_fu_224_wxo_V_ce0;
    end else begin
        wxo_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        x_V_ce0 = grp_forward_fu_224_x_V_ce0;
    end else begin
        x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        y_V_ce0 = grp_forward_fu_224_y_V_ce0;
    end else begin
        y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        y_V_we0 = grp_forward_fu_224_y_V_we0;
    end else begin
        y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln522_fu_312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln532_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_forward_fu_224_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln543_fu_342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln551_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((grp_forward_fu_224_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bf2_V_address0 = grp_forward_fu_224_bf_V_address0;

assign bf_V_address0 = grp_forward_fu_224_bf_V_address0;

assign bg2_V_address0 = grp_forward_fu_224_bg_V_address0;

assign bg_V_address0 = grp_forward_fu_224_bg_V_address0;

assign bi2_V_address0 = grp_forward_fu_224_bi_V_address0;

assign bi_V_address0 = grp_forward_fu_224_bi_V_address0;

assign bo2_V_address0 = grp_forward_fu_224_bo_V_address0;

assign bo_V_address0 = grp_forward_fu_224_bo_V_address0;

assign cnn_lstm2_cache_V_address0 = grp_forward_fu_224_LSTM_cache_V_address0;

assign cnn_lstm2_cache_V_address1 = grp_forward_fu_224_LSTM_cache_V_address1;

assign cnn_lstm2_cache_V_d0 = grp_forward_fu_224_LSTM_cache_V_d0;

assign cnn_lstm2_cache_V_d1 = grp_forward_fu_224_LSTM_cache_V_d1;

assign cnn_lstm2_f_V_address0 = grp_forward_fu_224_LSTM_f_V_address0;

assign cnn_lstm2_f_V_address1 = grp_forward_fu_224_LSTM_f_V_address1;

assign cnn_lstm2_f_V_d0 = grp_forward_fu_224_LSTM_f_V_d0;

assign cnn_lstm2_f_V_d1 = grp_forward_fu_224_LSTM_f_V_d1;

assign cnn_lstm2_g_V_address0 = grp_forward_fu_224_LSTM_g_V_address0;

assign cnn_lstm2_g_V_address1 = grp_forward_fu_224_LSTM_g_V_address1;

assign cnn_lstm2_g_V_d0 = grp_forward_fu_224_LSTM_g_V_d0;

assign cnn_lstm2_g_V_d1 = grp_forward_fu_224_LSTM_g_V_d1;

assign cnn_lstm2_i_V_address0 = grp_forward_fu_224_LSTM_i_V_address0;

assign cnn_lstm2_i_V_address1 = grp_forward_fu_224_LSTM_i_V_address1;

assign cnn_lstm2_i_V_d0 = grp_forward_fu_224_LSTM_i_V_d0;

assign cnn_lstm2_i_V_d1 = grp_forward_fu_224_LSTM_i_V_d1;

assign cnn_lstm2_o_V_address0 = grp_forward_fu_224_LSTM_o_V_address0;

assign cnn_lstm2_o_V_address1 = grp_forward_fu_224_LSTM_o_V_address1;

assign cnn_lstm2_o_V_d0 = grp_forward_fu_224_LSTM_o_V_d0;

assign cnn_lstm2_o_V_d1 = grp_forward_fu_224_LSTM_o_V_d1;

assign cnn_lstm_cache_V_address0 = grp_forward_fu_224_LSTM_cache_V_address0;

assign cnn_lstm_cache_V_address1 = grp_forward_fu_224_LSTM_cache_V_address1;

assign cnn_lstm_cache_V_d0 = grp_forward_fu_224_LSTM_cache_V_d0;

assign cnn_lstm_cache_V_d1 = grp_forward_fu_224_LSTM_cache_V_d1;

assign cnn_lstm_f_V_address0 = grp_forward_fu_224_LSTM_f_V_address0;

assign cnn_lstm_f_V_address1 = grp_forward_fu_224_LSTM_f_V_address1;

assign cnn_lstm_f_V_d0 = grp_forward_fu_224_LSTM_f_V_d0;

assign cnn_lstm_f_V_d1 = grp_forward_fu_224_LSTM_f_V_d1;

assign cnn_lstm_g_V_address0 = grp_forward_fu_224_LSTM_g_V_address0;

assign cnn_lstm_g_V_address1 = grp_forward_fu_224_LSTM_g_V_address1;

assign cnn_lstm_g_V_d0 = grp_forward_fu_224_LSTM_g_V_d0;

assign cnn_lstm_g_V_d1 = grp_forward_fu_224_LSTM_g_V_d1;

assign cnn_lstm_i_V_address0 = grp_forward_fu_224_LSTM_i_V_address0;

assign cnn_lstm_i_V_address1 = grp_forward_fu_224_LSTM_i_V_address1;

assign cnn_lstm_i_V_d0 = grp_forward_fu_224_LSTM_i_V_d0;

assign cnn_lstm_i_V_d1 = grp_forward_fu_224_LSTM_i_V_d1;

assign cnn_lstm_o_V_address0 = grp_forward_fu_224_LSTM_o_V_address0;

assign cnn_lstm_o_V_address1 = grp_forward_fu_224_LSTM_o_V_address1;

assign cnn_lstm_o_V_d0 = grp_forward_fu_224_LSTM_o_V_d0;

assign cnn_lstm_o_V_d1 = grp_forward_fu_224_LSTM_o_V_d1;

assign grp_forward_fu_224_ap_start = grp_forward_fu_224_ap_start_reg;

assign i_1_fu_348_p2 = (i2_0_reg_201 + 9'd1);

assign i_fu_318_p2 = (i_0_reg_178 + 9'd1);

assign icmp_ln522_fu_312_p2 = ((i_0_reg_178 == 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln532_fu_330_p2 = ((t_0_reg_189 == 7'd75) ? 1'b1 : 1'b0);

assign icmp_ln543_fu_342_p2 = ((i2_0_reg_201 == 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln551_fu_360_p2 = ((t3_0_reg_212 == 7'd75) ? 1'b1 : 1'b0);

assign t_1_fu_366_p2 = (t3_0_reg_212 + 7'd1);

assign t_fu_336_p2 = (t_0_reg_189 + 7'd1);

assign whf2_V_address0 = grp_forward_fu_224_whf_V_address0;

assign whf_V_address0 = grp_forward_fu_224_whf_V_address0;

assign whg2_V_address0 = grp_forward_fu_224_whg_V_address0;

assign whg_V_address0 = grp_forward_fu_224_whg_V_address0;

assign whi2_V_address0 = grp_forward_fu_224_whi_V_address0;

assign whi_V_address0 = grp_forward_fu_224_whi_V_address0;

assign who2_V_address0 = grp_forward_fu_224_who_V_address0;

assign who_V_address0 = grp_forward_fu_224_who_V_address0;

assign wxf2_V_address0 = grp_forward_fu_224_wxf_V_address0;

assign wxf_V_address0 = grp_forward_fu_224_wxf_V_address0;

assign wxg2_V_address0 = grp_forward_fu_224_wxg_V_address0;

assign wxg_V_address0 = grp_forward_fu_224_wxg_V_address0;

assign wxi2_V_address0 = grp_forward_fu_224_wxi_V_address0;

assign wxi_V_address0 = grp_forward_fu_224_wxi_V_address0;

assign wxo2_V_address0 = grp_forward_fu_224_wxo_V_address0;

assign wxo_V_address0 = grp_forward_fu_224_wxo_V_address0;

assign x_V_address0 = grp_forward_fu_224_x_V_address0;

assign y_V_address0 = grp_forward_fu_224_y_V_address0;

assign y_V_d0 = grp_forward_fu_224_y_V_d0;

assign zext_ln524_fu_324_p1 = i_0_reg_178;

assign zext_ln545_fu_354_p1 = i2_0_reg_201;

endmodule //kerneldl_predict

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kerneldl_p_hls_fptosi_float_i32.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kerneldl_p_hls_fptosi_float_i32::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kerneldl_p_hls_fptosi_float_i32::ap_const_logic_0 = sc_dt::Log_0;
const bool kerneldl_p_hls_fptosi_float_i32::ap_const_boolean_1 = true;
const bool kerneldl_p_hls_fptosi_float_i32::ap_const_boolean_0 = false;
const sc_lv<32> kerneldl_p_hls_fptosi_float_i32::ap_const_lv32_1F = "11111";
const sc_lv<32> kerneldl_p_hls_fptosi_float_i32::ap_const_lv32_17 = "10111";
const sc_lv<32> kerneldl_p_hls_fptosi_float_i32::ap_const_lv32_1E = "11110";
const sc_lv<1> kerneldl_p_hls_fptosi_float_i32::ap_const_lv1_1 = "1";
const sc_lv<1> kerneldl_p_hls_fptosi_float_i32::ap_const_lv1_0 = "0";
const sc_lv<9> kerneldl_p_hls_fptosi_float_i32::ap_const_lv9_181 = "110000001";
const sc_lv<32> kerneldl_p_hls_fptosi_float_i32::ap_const_lv32_8 = "1000";
const sc_lv<8> kerneldl_p_hls_fptosi_float_i32::ap_const_lv8_7F = "1111111";
const sc_lv<32> kerneldl_p_hls_fptosi_float_i32::ap_const_lv32_18 = "11000";
const sc_lv<32> kerneldl_p_hls_fptosi_float_i32::ap_const_lv32_37 = "110111";
const sc_lv<32> kerneldl_p_hls_fptosi_float_i32::ap_const_lv32_0 = "00000000000000000000000000000000";

kerneldl_p_hls_fptosi_float_i32::kerneldl_p_hls_fptosi_float_i32(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln339_fu_88_p2);
    sensitive << ( zext_ln339_fu_84_p1 );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_return);
    sensitive << ( p_Val2_6_fu_179_p3 );
    sensitive << ( ap_ce_reg );
    sensitive << ( ap_return_int_reg );

    SC_METHOD(thread_isNeg_fu_94_p3);
    sensitive << ( add_ln339_fu_88_p2 );

    SC_METHOD(thread_mantissa_V_fu_70_p4);
    sensitive << ( tmp_V_1_fu_66_p1 );

    SC_METHOD(thread_p_Val2_5_fu_166_p3);
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( zext_ln662_fu_152_p1 );
    sensitive << ( tmp_1_fu_156_p4 );

    SC_METHOD(thread_p_Val2_6_fu_179_p3);
    sensitive << ( p_Result_s_reg_185 );
    sensitive << ( p_Val2_5_reg_190 );
    sensitive << ( result_V_1_fu_174_p2 );

    SC_METHOD(thread_p_Val2_s_fu_44_p1);
    sensitive << ( x );

    SC_METHOD(thread_r_V_1_fu_138_p2);
    sensitive << ( zext_ln682_fu_80_p1 );
    sensitive << ( zext_ln1287_fu_128_p1 );

    SC_METHOD(thread_r_V_fu_132_p2);
    sensitive << ( mantissa_V_fu_70_p4 );
    sensitive << ( sext_ln1311_2_fu_124_p1 );

    SC_METHOD(thread_result_V_1_fu_174_p2);
    sensitive << ( p_Val2_5_reg_190 );

    SC_METHOD(thread_sext_ln1311_1_fu_120_p1);
    sensitive << ( ush_fu_112_p3 );

    SC_METHOD(thread_sext_ln1311_2_fu_124_p1);
    sensitive << ( ush_fu_112_p3 );

    SC_METHOD(thread_sext_ln1311_fu_108_p1);
    sensitive << ( sub_ln1311_fu_102_p2 );

    SC_METHOD(thread_sub_ln1311_fu_102_p2);
    sensitive << ( tmp_V_fu_56_p4 );

    SC_METHOD(thread_tmp_1_fu_156_p4);
    sensitive << ( r_V_1_fu_138_p2 );

    SC_METHOD(thread_tmp_V_1_fu_66_p1);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_tmp_V_fu_56_p4);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_tmp_fu_144_p3);
    sensitive << ( r_V_fu_132_p2 );

    SC_METHOD(thread_ush_fu_112_p3);
    sensitive << ( add_ln339_fu_88_p2 );
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( sext_ln1311_fu_108_p1 );

    SC_METHOD(thread_zext_ln1287_fu_128_p1);
    sensitive << ( sext_ln1311_1_fu_120_p1 );

    SC_METHOD(thread_zext_ln339_fu_84_p1);
    sensitive << ( tmp_V_fu_56_p4 );

    SC_METHOD(thread_zext_ln662_fu_152_p1);
    sensitive << ( tmp_fu_144_p3 );

    SC_METHOD(thread_zext_ln682_fu_80_p1);
    sensitive << ( mantissa_V_fu_70_p4 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kerneldl_p_hls_fptosi_float_i32_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, p_Result_s_reg_185, "p_Result_s_reg_185");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, p_Val2_5_fu_166_p3, "p_Val2_5_fu_166_p3");
    sc_trace(mVcdFile, p_Val2_5_reg_190, "p_Val2_5_reg_190");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, p_Val2_s_fu_44_p1, "p_Val2_s_fu_44_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_66_p1, "tmp_V_1_fu_66_p1");
    sc_trace(mVcdFile, mantissa_V_fu_70_p4, "mantissa_V_fu_70_p4");
    sc_trace(mVcdFile, tmp_V_fu_56_p4, "tmp_V_fu_56_p4");
    sc_trace(mVcdFile, zext_ln339_fu_84_p1, "zext_ln339_fu_84_p1");
    sc_trace(mVcdFile, add_ln339_fu_88_p2, "add_ln339_fu_88_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_102_p2, "sub_ln1311_fu_102_p2");
    sc_trace(mVcdFile, isNeg_fu_94_p3, "isNeg_fu_94_p3");
    sc_trace(mVcdFile, sext_ln1311_fu_108_p1, "sext_ln1311_fu_108_p1");
    sc_trace(mVcdFile, ush_fu_112_p3, "ush_fu_112_p3");
    sc_trace(mVcdFile, sext_ln1311_1_fu_120_p1, "sext_ln1311_1_fu_120_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_124_p1, "sext_ln1311_2_fu_124_p1");
    sc_trace(mVcdFile, zext_ln682_fu_80_p1, "zext_ln682_fu_80_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_128_p1, "zext_ln1287_fu_128_p1");
    sc_trace(mVcdFile, r_V_fu_132_p2, "r_V_fu_132_p2");
    sc_trace(mVcdFile, tmp_fu_144_p3, "tmp_fu_144_p3");
    sc_trace(mVcdFile, r_V_1_fu_138_p2, "r_V_1_fu_138_p2");
    sc_trace(mVcdFile, zext_ln662_fu_152_p1, "zext_ln662_fu_152_p1");
    sc_trace(mVcdFile, tmp_1_fu_156_p4, "tmp_1_fu_156_p4");
    sc_trace(mVcdFile, result_V_1_fu_174_p2, "result_V_1_fu_174_p2");
    sc_trace(mVcdFile, p_Val2_6_fu_179_p3, "p_Val2_6_fu_179_p3");
    sc_trace(mVcdFile, ap_ce_reg, "ap_ce_reg");
    sc_trace(mVcdFile, ap_return_int_reg, "ap_return_int_reg");
#endif

    }
}

kerneldl_p_hls_fptosi_float_i32::~kerneldl_p_hls_fptosi_float_i32() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void kerneldl_p_hls_fptosi_float_i32::thread_ap_clk_no_reset_() {
    ap_ce_reg = ap_ce.read();
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read())) {
        ap_return_int_reg = p_Val2_6_fu_179_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        p_Result_s_reg_185 = p_Val2_s_fu_44_p1.read().range(31, 31);
        p_Val2_5_reg_190 = p_Val2_5_fu_166_p3.read();
    }
}

void kerneldl_p_hls_fptosi_float_i32::thread_add_ln339_fu_88_p2() {
    add_ln339_fu_88_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_84_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_84_p1.read()));
}

void kerneldl_p_hls_fptosi_float_i32::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_p_hls_fptosi_float_i32::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_p_hls_fptosi_float_i32::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_p_hls_fptosi_float_i32::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_p_hls_fptosi_float_i32::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_ce_reg.read())) {
        ap_return = ap_return_int_reg.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read())) {
        ap_return = p_Val2_6_fu_179_p3.read();
    }
}

void kerneldl_p_hls_fptosi_float_i32::thread_isNeg_fu_94_p3() {
    isNeg_fu_94_p3 = add_ln339_fu_88_p2.read().range(8, 8);
}

void kerneldl_p_hls_fptosi_float_i32::thread_mantissa_V_fu_70_p4() {
    mantissa_V_fu_70_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_fu_66_p1.read()), ap_const_lv1_0);
}

void kerneldl_p_hls_fptosi_float_i32::thread_p_Val2_5_fu_166_p3() {
    p_Val2_5_fu_166_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_94_p3.read()[0].to_bool())? zext_ln662_fu_152_p1.read(): tmp_1_fu_156_p4.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_p_Val2_6_fu_179_p3() {
    p_Val2_6_fu_179_p3 = (!p_Result_s_reg_185.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_185.read()[0].to_bool())? result_V_1_fu_174_p2.read(): p_Val2_5_reg_190.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_p_Val2_s_fu_44_p1() {
    p_Val2_s_fu_44_p1 = x.read();
}

void kerneldl_p_hls_fptosi_float_i32::thread_r_V_1_fu_138_p2() {
    r_V_1_fu_138_p2 = (!zext_ln1287_fu_128_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_80_p1.read() << (unsigned short)zext_ln1287_fu_128_p1.read().to_uint();
}

void kerneldl_p_hls_fptosi_float_i32::thread_r_V_fu_132_p2() {
    r_V_fu_132_p2 = (!sext_ln1311_2_fu_124_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_70_p4.read() >> (unsigned short)sext_ln1311_2_fu_124_p1.read().to_uint();
}

void kerneldl_p_hls_fptosi_float_i32::thread_result_V_1_fu_174_p2() {
    result_V_1_fu_174_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_5_reg_190.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_5_reg_190.read()));
}

void kerneldl_p_hls_fptosi_float_i32::thread_sext_ln1311_1_fu_120_p1() {
    sext_ln1311_1_fu_120_p1 = esl_sext<32,9>(ush_fu_112_p3.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_sext_ln1311_2_fu_124_p1() {
    sext_ln1311_2_fu_124_p1 = esl_sext<25,9>(ush_fu_112_p3.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_sext_ln1311_fu_108_p1() {
    sext_ln1311_fu_108_p1 = esl_sext<9,8>(sub_ln1311_fu_102_p2.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_sub_ln1311_fu_102_p2() {
    sub_ln1311_fu_102_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_56_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_56_p4.read()));
}

void kerneldl_p_hls_fptosi_float_i32::thread_tmp_1_fu_156_p4() {
    tmp_1_fu_156_p4 = r_V_1_fu_138_p2.read().range(55, 24);
}

void kerneldl_p_hls_fptosi_float_i32::thread_tmp_V_1_fu_66_p1() {
    tmp_V_1_fu_66_p1 = p_Val2_s_fu_44_p1.read().range(23-1, 0);
}

void kerneldl_p_hls_fptosi_float_i32::thread_tmp_V_fu_56_p4() {
    tmp_V_fu_56_p4 = p_Val2_s_fu_44_p1.read().range(30, 23);
}

void kerneldl_p_hls_fptosi_float_i32::thread_tmp_fu_144_p3() {
    tmp_fu_144_p3 = r_V_fu_132_p2.read().range(24, 24);
}

void kerneldl_p_hls_fptosi_float_i32::thread_ush_fu_112_p3() {
    ush_fu_112_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_94_p3.read()[0].to_bool())? sext_ln1311_fu_108_p1.read(): add_ln339_fu_88_p2.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_zext_ln1287_fu_128_p1() {
    zext_ln1287_fu_128_p1 = esl_zext<79,32>(sext_ln1311_1_fu_120_p1.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_zext_ln339_fu_84_p1() {
    zext_ln339_fu_84_p1 = esl_zext<9,8>(tmp_V_fu_56_p4.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_zext_ln662_fu_152_p1() {
    zext_ln662_fu_152_p1 = esl_zext<32,1>(tmp_fu_144_p3.read());
}

void kerneldl_p_hls_fptosi_float_i32::thread_zext_ln682_fu_80_p1() {
    zext_ln682_fu_80_p1 = esl_zext<79,25>(mantissa_V_fu_70_p4.read());
}

}


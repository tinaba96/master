// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kerneldl_forward_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kerneldl_forward_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kerneldl_forward_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state1 = "1";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state4 = "100";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state5 = "1000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state6 = "10000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state7 = "100000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state8 = "1000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp1_stage0 = "10000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp1_stage1 = "100000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp1_stage2 = "1000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp1_stage3 = "10000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp1_stage4 = "100000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp1_stage5 = "1000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_pp1_stage6 = "10000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state25 = "100000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state26 = "1000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state27 = "10000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state28 = "100000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state29 = "1000000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state30 = "10000000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state31 = "100000000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state32 = "1000000000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state33 = "10000000000000000000000";
const sc_lv<24> kerneldl_forward_1::ap_ST_fsm_state34 = "100000000000000000000000";
const bool kerneldl_forward_1::ap_const_boolean_1 = true;
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_1 = "1";
const bool kerneldl_forward_1::ap_const_boolean_0 = false;
const sc_lv<1> kerneldl_forward_1::ap_const_lv1_0 = "0";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_3 = "11";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_5 = "101";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_6 = "110";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_7 = "111";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_8 = "1000";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_9 = "1001";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_A = "1010";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_B = "1011";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_D = "1101";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_E = "1110";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_F = "1111";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_16 = "10110";
const sc_lv<1> kerneldl_forward_1::ap_const_lv1_1 = "1";
const sc_lv<12> kerneldl_forward_1::ap_const_lv12_0 = "000000000000";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_17 = "10111";
const sc_lv<19> kerneldl_forward_1::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_2 = "10";
const sc_lv<9> kerneldl_forward_1::ap_const_lv9_0 = "000000000";
const sc_lv<10> kerneldl_forward_1::ap_const_lv10_0 = "0000000000";
const sc_lv<7> kerneldl_forward_1::ap_const_lv7_0 = "0000000";
const sc_lv<3> kerneldl_forward_1::ap_const_lv3_0 = "000";
const sc_lv<5> kerneldl_forward_1::ap_const_lv5_0 = "00000";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_10 = "10000";
const sc_lv<32> kerneldl_forward_1::ap_const_lv32_C = "1100";
const sc_lv<12> kerneldl_forward_1::ap_const_lv12_FA0 = "111110100000";
const sc_lv<12> kerneldl_forward_1::ap_const_lv12_1 = "1";
const sc_lv<19> kerneldl_forward_1::ap_const_lv19_4C2C0 = "1001100001011000000";
const sc_lv<19> kerneldl_forward_1::ap_const_lv19_1 = "1";
const sc_lv<10> kerneldl_forward_1::ap_const_lv10_3CF = "1111001111";
const sc_lv<9> kerneldl_forward_1::ap_const_lv9_1 = "1";
const sc_lv<16> kerneldl_forward_1::ap_const_lv16_68 = "1101000";
const sc_lv<7> kerneldl_forward_1::ap_const_lv7_68 = "1101000";
const sc_lv<7> kerneldl_forward_1::ap_const_lv7_1 = "1";
const sc_lv<5> kerneldl_forward_1::ap_const_lv5_1A = "11010";
const sc_lv<3> kerneldl_forward_1::ap_const_lv3_1 = "1";
const sc_lv<2> kerneldl_forward_1::ap_const_lv2_0 = "00";
const sc_lv<5> kerneldl_forward_1::ap_const_lv5_1 = "1";
const sc_lv<10> kerneldl_forward_1::ap_const_lv10_1 = "1";
const sc_lv<19> kerneldl_forward_1::ap_const_lv19_3CF = "1111001111";
const sc_lv<9> kerneldl_forward_1::ap_const_lv9_1A = "11010";

kerneldl_forward_1::kerneldl_forward_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15 = new kerneldl_kerneldl_fadd_32ns_32ns_32_7_full_dsp_1<1,7,32,32,32>("kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15");
    kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15->clk(ap_clk);
    kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15->reset(ap_rst);
    kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15->din0(grp_fu_244_p0);
    kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15->din1(grp_fu_244_p1);
    kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15->ce(ap_var_for_const0);
    kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15->dout(grp_fu_244_p2);
    kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16 = new kerneldl_kerneldl_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16");
    kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16->clk(ap_clk);
    kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16->reset(ap_rst);
    kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16->din0(in_load_1_reg_541);
    kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16->din1(kernel_load_reg_556);
    kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16->ce(ap_var_for_const0);
    kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16->dout(grp_fu_249_p2);
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17 = new kerneldl_kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1<1,4,9,11,10,19>("kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17");
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17->clk(ap_clk);
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17->reset(ap_rst);
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17->din0(grp_fu_430_p0);
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17->din1(grp_fu_430_p1);
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17->din2(grp_fu_430_p2);
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17->ce(ap_var_for_const0);
    kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17->dout(grp_fu_430_p3);
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18 = new kerneldl_kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1<1,4,3,6,16,16>("kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18");
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18->clk(ap_clk);
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18->reset(ap_rst);
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18->din0(grp_fu_439_p0);
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18->din1(grp_fu_439_p1);
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18->din2(grp_fu_439_p2);
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18->ce(ap_var_for_const0);
    kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18->dout(grp_fu_439_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln356_1_fu_296_p2);
    sensitive << ( nk_0_reg_177 );

    SC_METHOD(thread_add_ln356_fu_276_p2);
    sensitive << ( indvar_flatten8_reg_166 );

    SC_METHOD(thread_add_ln364_1_fu_356_p2);
    sensitive << ( ap_phi_mux_t_0_phi_fu_214_p4 );

    SC_METHOD(thread_add_ln364_fu_336_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_203_p4 );

    SC_METHOD(thread_add_ln369_1_fu_393_p2);
    sensitive << ( zext_ln364_fu_374_p1 );
    sensitive << ( shl_ln_fu_385_p3 );

    SC_METHOD(thread_add_ln369_fu_380_p2);
    sensitive << ( select_ln359_reg_475 );
    sensitive << ( zext_ln369_fu_377_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_pp1_stage2);

    SC_METHOD(thread_ap_block_pp1_stage2_11001);

    SC_METHOD(thread_ap_block_pp1_stage2_subdone);

    SC_METHOD(thread_ap_block_pp1_stage3);

    SC_METHOD(thread_ap_block_pp1_stage3_11001);

    SC_METHOD(thread_ap_block_pp1_stage3_subdone);

    SC_METHOD(thread_ap_block_pp1_stage4_11001);

    SC_METHOD(thread_ap_block_pp1_stage4_subdone);

    SC_METHOD(thread_ap_block_pp1_stage5);

    SC_METHOD(thread_ap_block_pp1_stage5_subdone);

    SC_METHOD(thread_ap_block_pp1_stage6);

    SC_METHOD(thread_ap_block_pp1_stage6_11001);

    SC_METHOD(thread_ap_block_pp1_stage6_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state11_pp1_stage2_iter0);

    SC_METHOD(thread_ap_block_state12_pp1_stage3_iter0);

    SC_METHOD(thread_ap_block_state13_pp1_stage4_iter0);

    SC_METHOD(thread_ap_block_state14_pp1_stage5_iter0);

    SC_METHOD(thread_ap_block_state15_pp1_stage6_iter0);

    SC_METHOD(thread_ap_block_state16_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state17_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state18_pp1_stage2_iter1);

    SC_METHOD(thread_ap_block_state19_pp1_stage3_iter1);

    SC_METHOD(thread_ap_block_state20_pp1_stage4_iter1);

    SC_METHOD(thread_ap_block_state21_pp1_stage5_iter1);

    SC_METHOD(thread_ap_block_state22_pp1_stage6_iter1);

    SC_METHOD(thread_ap_block_state23_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state24_pp1_stage1_iter2);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln349_fu_253_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state9);
    sensitive << ( icmp_ln364_fu_330_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln356_fu_270_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_empty_26_phi_fu_225_p4);
    sensitive << ( empty_26_reg_221 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_203_p4);
    sensitive << ( indvar_flatten_reg_199 );
    sensitive << ( icmp_ln364_reg_509 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( add_ln364_reg_513 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_k_0_phi_fu_237_p4);
    sensitive << ( k_0_reg_233 );
    sensitive << ( icmp_ln364_reg_509 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( k_reg_561 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_t_0_phi_fu_214_p4);
    sensitive << ( t_0_reg_210 );
    sensitive << ( icmp_ln364_reg_509 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( select_ln364_1_reg_525 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln356_fu_270_p2 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( zext_ln372_fu_421_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_conv1d_actc_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln351_reg_457 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_conv1d_actc_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_conv1d_actc_d0);
    sensitive << ( in_r_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_conv1d_actc_we0);
    sensitive << ( icmp_ln349_reg_448 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_244_p0);
    sensitive << ( empty_26_reg_221 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_phi_mux_empty_26_phi_fu_225_p4 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_244_p1);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( tmp_s_reg_566 );
    sensitive << ( b_load_reg_586 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_430_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_430_p00 );

    SC_METHOD(thread_grp_fu_430_p00);
    sensitive << ( select_ln359_1_fu_302_p3 );

    SC_METHOD(thread_grp_fu_430_p1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_430_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fu_430_p20 );

    SC_METHOD(thread_grp_fu_430_p20);
    sensitive << ( select_ln359_reg_475 );

    SC_METHOD(thread_grp_fu_439_p0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( grp_fu_439_p00 );

    SC_METHOD(thread_grp_fu_439_p00);
    sensitive << ( select_ln364_1_fu_362_p3 );

    SC_METHOD(thread_grp_fu_439_p1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_grp_fu_439_p2);
    sensitive << ( mul_ln359_1_reg_499 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( k_0_cast2_fu_404_p1 );

    SC_METHOD(thread_i_11_fu_425_p2);
    sensitive << ( select_ln359_reg_475 );

    SC_METHOD(thread_i_fu_259_p2);
    sensitive << ( i_0_reg_155 );

    SC_METHOD(thread_icmp_ln349_fu_253_p2);
    sensitive << ( i_0_reg_155 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln356_fu_270_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( indvar_flatten8_reg_166 );

    SC_METHOD(thread_icmp_ln361_fu_282_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln356_fu_270_p2 );
    sensitive << ( j_reg_188 );

    SC_METHOD(thread_icmp_ln364_fu_330_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_203_p4 );

    SC_METHOD(thread_icmp_ln367_fu_342_p2);
    sensitive << ( icmp_ln364_fu_330_p2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_k_0_phi_fu_237_p4 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln351_fu_265_p1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln369_1_fu_399_p1 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_k_0_cast2_fu_404_p1);
    sensitive << ( select_ln364_reg_518 );

    SC_METHOD(thread_k_fu_416_p2);
    sensitive << ( select_ln364_reg_518 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( zext_ln369_2_fu_412_p1 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_mul_ln359_1_fu_320_p0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( mul_ln359_1_fu_320_p00 );

    SC_METHOD(thread_mul_ln359_1_fu_320_p00);
    sensitive << ( select_ln359_1_reg_483 );

    SC_METHOD(thread_mul_ln359_1_fu_320_p2);
    sensitive << ( mul_ln359_1_fu_320_p0 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( out_addr_reg_504 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( tmp_reg_591 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_select_ln359_1_fu_302_p3);
    sensitive << ( nk_0_reg_177 );
    sensitive << ( icmp_ln361_fu_282_p2 );
    sensitive << ( add_ln356_1_fu_296_p2 );

    SC_METHOD(thread_select_ln359_fu_288_p3);
    sensitive << ( j_reg_188 );
    sensitive << ( icmp_ln361_fu_282_p2 );

    SC_METHOD(thread_select_ln364_1_fu_362_p3);
    sensitive << ( ap_phi_mux_t_0_phi_fu_214_p4 );
    sensitive << ( icmp_ln367_fu_342_p2 );
    sensitive << ( add_ln364_1_fu_356_p2 );

    SC_METHOD(thread_select_ln364_fu_348_p3);
    sensitive << ( ap_phi_mux_k_0_phi_fu_237_p4 );
    sensitive << ( icmp_ln367_fu_342_p2 );

    SC_METHOD(thread_shl_ln_fu_385_p3);
    sensitive << ( add_ln369_fu_380_p2 );

    SC_METHOD(thread_zext_ln351_fu_265_p1);
    sensitive << ( i_0_reg_155 );

    SC_METHOD(thread_zext_ln363_fu_326_p1);
    sensitive << ( grp_fu_430_p3 );

    SC_METHOD(thread_zext_ln364_fu_374_p1);
    sensitive << ( select_ln364_1_reg_525 );

    SC_METHOD(thread_zext_ln369_1_fu_399_p1);
    sensitive << ( add_ln369_1_fu_393_p2 );

    SC_METHOD(thread_zext_ln369_2_fu_412_p1);
    sensitive << ( grp_fu_439_p3 );

    SC_METHOD(thread_zext_ln369_fu_377_p1);
    sensitive << ( select_ln364_reg_518 );

    SC_METHOD(thread_zext_ln372_fu_421_p1);
    sensitive << ( select_ln359_reg_475 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln349_fu_253_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln356_fu_270_p2 );
    sensitive << ( icmp_ln364_fu_330_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage6_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_block_pp1_stage2_subdone );
    sensitive << ( ap_block_pp1_stage3_subdone );
    sensitive << ( ap_block_pp1_stage4_subdone );
    sensitive << ( ap_block_pp1_stage5_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kerneldl_forward_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv1d_actc_address0, "(port)conv1d_actc_address0");
    sc_trace(mVcdFile, conv1d_actc_ce0, "(port)conv1d_actc_ce0");
    sc_trace(mVcdFile, conv1d_actc_we0, "(port)conv1d_actc_we0");
    sc_trace(mVcdFile, conv1d_actc_d0, "(port)conv1d_actc_d0");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_155, "i_0_reg_155");
    sc_trace(mVcdFile, indvar_flatten_reg_199, "indvar_flatten_reg_199");
    sc_trace(mVcdFile, t_0_reg_210, "t_0_reg_210");
    sc_trace(mVcdFile, empty_26_reg_221, "empty_26_reg_221");
    sc_trace(mVcdFile, k_0_reg_233, "k_0_reg_233");
    sc_trace(mVcdFile, icmp_ln349_fu_253_p2, "icmp_ln349_fu_253_p2");
    sc_trace(mVcdFile, icmp_ln349_reg_448, "icmp_ln349_reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_259_p2, "i_fu_259_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln351_fu_265_p1, "zext_ln351_fu_265_p1");
    sc_trace(mVcdFile, zext_ln351_reg_457, "zext_ln351_reg_457");
    sc_trace(mVcdFile, add_ln356_fu_276_p2, "add_ln356_fu_276_p2");
    sc_trace(mVcdFile, add_ln356_reg_470, "add_ln356_reg_470");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, select_ln359_fu_288_p3, "select_ln359_fu_288_p3");
    sc_trace(mVcdFile, select_ln359_reg_475, "select_ln359_reg_475");
    sc_trace(mVcdFile, icmp_ln356_fu_270_p2, "icmp_ln356_fu_270_p2");
    sc_trace(mVcdFile, select_ln359_1_fu_302_p3, "select_ln359_1_fu_302_p3");
    sc_trace(mVcdFile, select_ln359_1_reg_483, "select_ln359_1_reg_483");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, mul_ln359_1_fu_320_p2, "mul_ln359_1_fu_320_p2");
    sc_trace(mVcdFile, mul_ln359_1_reg_499, "mul_ln359_1_reg_499");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, out_addr_reg_504, "out_addr_reg_504");
    sc_trace(mVcdFile, icmp_ln364_fu_330_p2, "icmp_ln364_fu_330_p2");
    sc_trace(mVcdFile, icmp_ln364_reg_509, "icmp_ln364_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter0, "ap_block_state9_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage0_iter1, "ap_block_state16_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state23_pp1_stage0_iter2, "ap_block_state23_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, icmp_ln364_reg_509_pp1_iter1_reg, "icmp_ln364_reg_509_pp1_iter1_reg");
    sc_trace(mVcdFile, icmp_ln364_reg_509_pp1_iter2_reg, "icmp_ln364_reg_509_pp1_iter2_reg");
    sc_trace(mVcdFile, add_ln364_fu_336_p2, "add_ln364_fu_336_p2");
    sc_trace(mVcdFile, add_ln364_reg_513, "add_ln364_reg_513");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, select_ln364_fu_348_p3, "select_ln364_fu_348_p3");
    sc_trace(mVcdFile, select_ln364_reg_518, "select_ln364_reg_518");
    sc_trace(mVcdFile, select_ln364_1_fu_362_p3, "select_ln364_1_fu_362_p3");
    sc_trace(mVcdFile, select_ln364_1_reg_525, "select_ln364_1_reg_525");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage1_iter0, "ap_block_state10_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage1_iter1, "ap_block_state17_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state24_pp1_stage1_iter2, "ap_block_state24_pp1_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, in_load_1_reg_541, "in_load_1_reg_541");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage2, "ap_CS_fsm_pp1_stage2");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage2_iter0, "ap_block_state11_pp1_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage2_iter1, "ap_block_state18_pp1_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage2_11001, "ap_block_pp1_stage2_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage3, "ap_CS_fsm_pp1_stage3");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage3_iter0, "ap_block_state12_pp1_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage3_iter1, "ap_block_state19_pp1_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage3_11001, "ap_block_pp1_stage3_11001");
    sc_trace(mVcdFile, kernel_load_reg_556, "kernel_load_reg_556");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage4, "ap_CS_fsm_pp1_stage4");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage4_iter0, "ap_block_state13_pp1_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state20_pp1_stage4_iter1, "ap_block_state20_pp1_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage4_11001, "ap_block_pp1_stage4_11001");
    sc_trace(mVcdFile, k_fu_416_p2, "k_fu_416_p2");
    sc_trace(mVcdFile, k_reg_561, "k_reg_561");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage6, "ap_CS_fsm_pp1_stage6");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage6_iter0, "ap_block_state15_pp1_stage6_iter0");
    sc_trace(mVcdFile, ap_block_state22_pp1_stage6_iter1, "ap_block_state22_pp1_stage6_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage6_11001, "ap_block_pp1_stage6_11001");
    sc_trace(mVcdFile, grp_fu_249_p2, "grp_fu_249_p2");
    sc_trace(mVcdFile, tmp_s_reg_566, "tmp_s_reg_566");
    sc_trace(mVcdFile, grp_fu_244_p2, "grp_fu_244_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, i_11_fu_425_p2, "i_11_fu_425_p2");
    sc_trace(mVcdFile, i_11_reg_581, "i_11_reg_581");
    sc_trace(mVcdFile, b_load_reg_586, "b_load_reg_586");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_reg_591, "tmp_reg_591");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state9, "ap_condition_pp1_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage6_subdone, "ap_block_pp1_stage6_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, indvar_flatten8_reg_166, "indvar_flatten8_reg_166");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, nk_0_reg_177, "nk_0_reg_177");
    sc_trace(mVcdFile, j_reg_188, "j_reg_188");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_203_p4, "ap_phi_mux_indvar_flatten_phi_fu_203_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, ap_phi_mux_t_0_phi_fu_214_p4, "ap_phi_mux_t_0_phi_fu_214_p4");
    sc_trace(mVcdFile, ap_phi_mux_empty_26_phi_fu_225_p4, "ap_phi_mux_empty_26_phi_fu_225_p4");
    sc_trace(mVcdFile, ap_phi_mux_k_0_phi_fu_237_p4, "ap_phi_mux_k_0_phi_fu_237_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln363_fu_326_p1, "zext_ln363_fu_326_p1");
    sc_trace(mVcdFile, zext_ln369_1_fu_399_p1, "zext_ln369_1_fu_399_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, zext_ln369_2_fu_412_p1, "zext_ln369_2_fu_412_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage3, "ap_block_pp1_stage3");
    sc_trace(mVcdFile, zext_ln372_fu_421_p1, "zext_ln372_fu_421_p1");
    sc_trace(mVcdFile, grp_fu_244_p0, "grp_fu_244_p0");
    sc_trace(mVcdFile, grp_fu_244_p1, "grp_fu_244_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage2, "ap_block_pp1_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage5, "ap_CS_fsm_pp1_stage5");
    sc_trace(mVcdFile, ap_block_pp1_stage5, "ap_block_pp1_stage5");
    sc_trace(mVcdFile, icmp_ln361_fu_282_p2, "icmp_ln361_fu_282_p2");
    sc_trace(mVcdFile, add_ln356_1_fu_296_p2, "add_ln356_1_fu_296_p2");
    sc_trace(mVcdFile, mul_ln359_1_fu_320_p0, "mul_ln359_1_fu_320_p0");
    sc_trace(mVcdFile, grp_fu_430_p3, "grp_fu_430_p3");
    sc_trace(mVcdFile, icmp_ln367_fu_342_p2, "icmp_ln367_fu_342_p2");
    sc_trace(mVcdFile, add_ln364_1_fu_356_p2, "add_ln364_1_fu_356_p2");
    sc_trace(mVcdFile, zext_ln369_fu_377_p1, "zext_ln369_fu_377_p1");
    sc_trace(mVcdFile, add_ln369_fu_380_p2, "add_ln369_fu_380_p2");
    sc_trace(mVcdFile, zext_ln364_fu_374_p1, "zext_ln364_fu_374_p1");
    sc_trace(mVcdFile, shl_ln_fu_385_p3, "shl_ln_fu_385_p3");
    sc_trace(mVcdFile, add_ln369_1_fu_393_p2, "add_ln369_1_fu_393_p2");
    sc_trace(mVcdFile, k_0_cast2_fu_404_p1, "k_0_cast2_fu_404_p1");
    sc_trace(mVcdFile, grp_fu_439_p3, "grp_fu_439_p3");
    sc_trace(mVcdFile, ap_block_pp1_stage6, "ap_block_pp1_stage6");
    sc_trace(mVcdFile, grp_fu_430_p0, "grp_fu_430_p0");
    sc_trace(mVcdFile, grp_fu_430_p1, "grp_fu_430_p1");
    sc_trace(mVcdFile, grp_fu_430_p2, "grp_fu_430_p2");
    sc_trace(mVcdFile, grp_fu_439_p0, "grp_fu_439_p0");
    sc_trace(mVcdFile, grp_fu_439_p1, "grp_fu_439_p1");
    sc_trace(mVcdFile, grp_fu_439_p2, "grp_fu_439_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp1_stage2_subdone, "ap_block_pp1_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage3_subdone, "ap_block_pp1_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage4_subdone, "ap_block_pp1_stage4_subdone");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage5_iter0, "ap_block_state14_pp1_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state21_pp1_stage5_iter1, "ap_block_state21_pp1_stage5_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage5_subdone, "ap_block_pp1_stage5_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, grp_fu_430_p00, "grp_fu_430_p00");
    sc_trace(mVcdFile, grp_fu_430_p20, "grp_fu_430_p20");
    sc_trace(mVcdFile, grp_fu_439_p00, "grp_fu_439_p00");
    sc_trace(mVcdFile, mul_ln359_1_fu_320_p00, "mul_ln359_1_fu_320_p00");
#endif

    }
}

kerneldl_forward_1::~kerneldl_forward_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete kerneldl_fadd_32ns_32ns_32_7_full_dsp_1_U15;
    delete kerneldl_fmul_32ns_32ns_32_4_max_dsp_1_U16;
    delete kerneldl_mac_muladd_9ns_11ns_10ns_19_4_1_U17;
    delete kerneldl_mac_muladd_3ns_6ns_16ns_16_4_1_U18;
}

void kerneldl_forward_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kerneldl_forward_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage6_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage6_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509_pp1_iter2_reg.read()))) {
        empty_26_reg_221 = grp_fu_244_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        empty_26_reg_221 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln349_fu_253_p2.read(), ap_const_lv1_0))) {
        i_0_reg_155 = i_fu_259_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_155 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        indvar_flatten8_reg_166 = ap_const_lv19_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        indvar_flatten8_reg_166 = add_ln356_reg_470.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        indvar_flatten_reg_199 = add_ln364_reg_513.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        indvar_flatten_reg_199 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_188 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        j_reg_188 = i_11_reg_581.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        k_0_reg_233 = k_reg_561.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        k_0_reg_233 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        nk_0_reg_177 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        nk_0_reg_177 = select_ln359_1_reg_483.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        t_0_reg_210 = select_ln364_1_reg_525.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_0_reg_210 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        add_ln356_reg_470 = add_ln356_fu_276_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        add_ln364_reg_513 = add_ln364_fu_336_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        b_load_reg_586 = b_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        i_11_reg_581 = i_11_fu_425_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln349_reg_448 = icmp_ln349_fu_253_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln364_reg_509 = icmp_ln364_fu_330_p2.read();
        icmp_ln364_reg_509_pp1_iter1_reg = icmp_ln364_reg_509.read();
        icmp_ln364_reg_509_pp1_iter2_reg = icmp_ln364_reg_509_pp1_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0))) {
        in_load_1_reg_541 = in_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage6_11001.read(), ap_const_boolean_0))) {
        k_reg_561 = k_fu_416_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage4_11001.read(), ap_const_boolean_0))) {
        kernel_load_reg_556 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        mul_ln359_1_reg_499 = mul_ln359_1_fu_320_p2.read();
        out_addr_reg_504 =  (sc_lv<19>) (zext_ln363_fu_326_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln356_fu_270_p2.read()))) {
        select_ln359_1_reg_483 = select_ln359_1_fu_302_p3.read();
        select_ln359_reg_475 = select_ln359_fu_288_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_fu_330_p2.read()))) {
        select_ln364_1_reg_525 = select_ln364_1_fu_362_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_fu_330_p2.read()))) {
        select_ln364_reg_518 = select_ln364_fu_348_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        tmp_reg_591 = grp_fu_244_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509_pp1_iter1_reg.read()))) {
        tmp_s_reg_566 = grp_fu_249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln349_fu_253_p2.read(), ap_const_lv1_0))) {
        zext_ln351_reg_457 = zext_ln351_fu_265_p1.read();
    }
}

void kerneldl_forward_1::thread_add_ln356_1_fu_296_p2() {
    add_ln356_1_fu_296_p2 = (!nk_0_reg_177.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(nk_0_reg_177.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void kerneldl_forward_1::thread_add_ln356_fu_276_p2() {
    add_ln356_fu_276_p2 = (!indvar_flatten8_reg_166.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(indvar_flatten8_reg_166.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void kerneldl_forward_1::thread_add_ln364_1_fu_356_p2() {
    add_ln364_1_fu_356_p2 = (!ap_phi_mux_t_0_phi_fu_214_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_t_0_phi_fu_214_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void kerneldl_forward_1::thread_add_ln364_fu_336_p2() {
    add_ln364_fu_336_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_203_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ap_phi_mux_indvar_flatten_phi_fu_203_p4.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void kerneldl_forward_1::thread_add_ln369_1_fu_393_p2() {
    add_ln369_1_fu_393_p2 = (!zext_ln364_fu_374_p1.read().is_01() || !shl_ln_fu_385_p3.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln364_fu_374_p1.read()) + sc_biguint<12>(shl_ln_fu_385_p3.read()));
}

void kerneldl_forward_1::thread_add_ln369_fu_380_p2() {
    add_ln369_fu_380_p2 = (!zext_ln369_fu_377_p1.read().is_01() || !select_ln359_reg_475.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln369_fu_377_p1.read()) + sc_biguint<10>(select_ln359_reg_475.read()));
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[7];
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[8];
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp1_stage2() {
    ap_CS_fsm_pp1_stage2 = ap_CS_fsm.read()[9];
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp1_stage3() {
    ap_CS_fsm_pp1_stage3 = ap_CS_fsm.read()[10];
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp1_stage4() {
    ap_CS_fsm_pp1_stage4 = ap_CS_fsm.read()[11];
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp1_stage5() {
    ap_CS_fsm_pp1_stage5 = ap_CS_fsm.read()[12];
}

void kerneldl_forward_1::thread_ap_CS_fsm_pp1_stage6() {
    ap_CS_fsm_pp1_stage6 = ap_CS_fsm.read()[13];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[14];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[15];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[16];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[22];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[23];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void kerneldl_forward_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void kerneldl_forward_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage2() {
    ap_block_pp1_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage2_11001() {
    ap_block_pp1_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage2_subdone() {
    ap_block_pp1_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage3() {
    ap_block_pp1_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage3_11001() {
    ap_block_pp1_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage3_subdone() {
    ap_block_pp1_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage4_11001() {
    ap_block_pp1_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage4_subdone() {
    ap_block_pp1_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage5() {
    ap_block_pp1_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage5_subdone() {
    ap_block_pp1_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage6() {
    ap_block_pp1_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage6_11001() {
    ap_block_pp1_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_pp1_stage6_subdone() {
    ap_block_pp1_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state10_pp1_stage1_iter0() {
    ap_block_state10_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state11_pp1_stage2_iter0() {
    ap_block_state11_pp1_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state12_pp1_stage3_iter0() {
    ap_block_state12_pp1_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state13_pp1_stage4_iter0() {
    ap_block_state13_pp1_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state14_pp1_stage5_iter0() {
    ap_block_state14_pp1_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state15_pp1_stage6_iter0() {
    ap_block_state15_pp1_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state16_pp1_stage0_iter1() {
    ap_block_state16_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state17_pp1_stage1_iter1() {
    ap_block_state17_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state18_pp1_stage2_iter1() {
    ap_block_state18_pp1_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state19_pp1_stage3_iter1() {
    ap_block_state19_pp1_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state20_pp1_stage4_iter1() {
    ap_block_state20_pp1_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state21_pp1_stage5_iter1() {
    ap_block_state21_pp1_stage5_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state22_pp1_stage6_iter1() {
    ap_block_state22_pp1_stage6_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state23_pp1_stage0_iter2() {
    ap_block_state23_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state24_pp1_stage1_iter2() {
    ap_block_state24_pp1_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_block_state9_pp1_stage0_iter0() {
    ap_block_state9_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kerneldl_forward_1::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln349_fu_253_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_ap_condition_pp1_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(icmp_ln364_fu_330_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln356_fu_270_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void kerneldl_forward_1::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void kerneldl_forward_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_ap_phi_mux_empty_26_phi_fu_225_p4() {
    ap_phi_mux_empty_26_phi_fu_225_p4 = empty_26_reg_221.read();
}

void kerneldl_forward_1::thread_ap_phi_mux_indvar_flatten_phi_fu_203_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_203_p4 = add_ln364_reg_513.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_203_p4 = indvar_flatten_reg_199.read();
    }
}

void kerneldl_forward_1::thread_ap_phi_mux_k_0_phi_fu_237_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_k_0_phi_fu_237_p4 = k_reg_561.read();
    } else {
        ap_phi_mux_k_0_phi_fu_237_p4 = k_0_reg_233.read();
    }
}

void kerneldl_forward_1::thread_ap_phi_mux_t_0_phi_fu_214_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln364_reg_509.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_t_0_phi_fu_214_p4 = select_ln364_1_reg_525.read();
    } else {
        ap_phi_mux_t_0_phi_fu_214_p4 = t_0_reg_210.read();
    }
}

void kerneldl_forward_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln356_fu_270_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_b_address0() {
    b_address0 =  (sc_lv<19>) (zext_ln372_fu_421_p1.read());
}

void kerneldl_forward_1::thread_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_conv1d_actc_address0() {
    conv1d_actc_address0 =  (sc_lv<12>) (zext_ln351_reg_457.read());
}

void kerneldl_forward_1::thread_conv1d_actc_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        conv1d_actc_ce0 = ap_const_logic_1;
    } else {
        conv1d_actc_ce0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_conv1d_actc_d0() {
    conv1d_actc_d0 = in_r_q0.read();
}

void kerneldl_forward_1::thread_conv1d_actc_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln349_reg_448.read(), ap_const_lv1_0))) {
        conv1d_actc_we0 = ap_const_logic_1;
    } else {
        conv1d_actc_we0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_grp_fu_244_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_244_p0 = empty_26_reg_221.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        grp_fu_244_p0 = ap_phi_mux_empty_26_phi_fu_225_p4.read();
    } else {
        grp_fu_244_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kerneldl_forward_1::thread_grp_fu_244_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_244_p1 = b_load_reg_586.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        grp_fu_244_p1 = tmp_s_reg_566.read();
    } else {
        grp_fu_244_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kerneldl_forward_1::thread_grp_fu_430_p0() {
    grp_fu_430_p0 =  (sc_lv<9>) (grp_fu_430_p00.read());
}

void kerneldl_forward_1::thread_grp_fu_430_p00() {
    grp_fu_430_p00 = esl_zext<19,9>(select_ln359_1_fu_302_p3.read());
}

void kerneldl_forward_1::thread_grp_fu_430_p1() {
    grp_fu_430_p1 =  (sc_lv<11>) (ap_const_lv19_3CF);
}

void kerneldl_forward_1::thread_grp_fu_430_p2() {
    grp_fu_430_p2 =  (sc_lv<10>) (grp_fu_430_p20.read());
}

void kerneldl_forward_1::thread_grp_fu_430_p20() {
    grp_fu_430_p20 = esl_zext<19,10>(select_ln359_reg_475.read());
}

void kerneldl_forward_1::thread_grp_fu_439_p0() {
    grp_fu_439_p0 =  (sc_lv<3>) (grp_fu_439_p00.read());
}

void kerneldl_forward_1::thread_grp_fu_439_p00() {
    grp_fu_439_p00 = esl_zext<9,3>(select_ln364_1_fu_362_p3.read());
}

void kerneldl_forward_1::thread_grp_fu_439_p1() {
    grp_fu_439_p1 =  (sc_lv<6>) (ap_const_lv9_1A);
}

void kerneldl_forward_1::thread_grp_fu_439_p2() {
    grp_fu_439_p2 = (!k_0_cast2_fu_404_p1.read().is_01() || !mul_ln359_1_reg_499.read().is_01())? sc_lv<16>(): (sc_biguint<16>(k_0_cast2_fu_404_p1.read()) + sc_biguint<16>(mul_ln359_1_reg_499.read()));
}

void kerneldl_forward_1::thread_i_11_fu_425_p2() {
    i_11_fu_425_p2 = (!select_ln359_reg_475.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(select_ln359_reg_475.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kerneldl_forward_1::thread_i_fu_259_p2() {
    i_fu_259_p2 = (!i_0_reg_155.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(i_0_reg_155.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void kerneldl_forward_1::thread_icmp_ln349_fu_253_p2() {
    icmp_ln349_fu_253_p2 = (!i_0_reg_155.read().is_01() || !ap_const_lv12_FA0.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_155.read() == ap_const_lv12_FA0);
}

void kerneldl_forward_1::thread_icmp_ln356_fu_270_p2() {
    icmp_ln356_fu_270_p2 = (!indvar_flatten8_reg_166.read().is_01() || !ap_const_lv19_4C2C0.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten8_reg_166.read() == ap_const_lv19_4C2C0);
}

void kerneldl_forward_1::thread_icmp_ln361_fu_282_p2() {
    icmp_ln361_fu_282_p2 = (!j_reg_188.read().is_01() || !ap_const_lv10_3CF.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_188.read() == ap_const_lv10_3CF);
}

void kerneldl_forward_1::thread_icmp_ln364_fu_330_p2() {
    icmp_ln364_fu_330_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_203_p4.read().is_01() || !ap_const_lv7_68.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_203_p4.read() == ap_const_lv7_68);
}

void kerneldl_forward_1::thread_icmp_ln367_fu_342_p2() {
    icmp_ln367_fu_342_p2 = (!ap_phi_mux_k_0_phi_fu_237_p4.read().is_01() || !ap_const_lv5_1A.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_k_0_phi_fu_237_p4.read() == ap_const_lv5_1A);
}

void kerneldl_forward_1::thread_in_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        in_r_address0 =  (sc_lv<12>) (zext_ln369_1_fu_399_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_r_address0 =  (sc_lv<12>) (zext_ln351_fu_265_p1.read());
    } else {
        in_r_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void kerneldl_forward_1::thread_in_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_k_0_cast2_fu_404_p1() {
    k_0_cast2_fu_404_p1 = esl_zext<16,5>(select_ln364_reg_518.read());
}

void kerneldl_forward_1::thread_k_fu_416_p2() {
    k_fu_416_p2 = (!select_ln364_reg_518.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(select_ln364_reg_518.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void kerneldl_forward_1::thread_kernel_address0() {
    kernel_address0 =  (sc_lv<16>) (zext_ln369_2_fu_412_p1.read());
}

void kerneldl_forward_1::thread_kernel_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_mul_ln359_1_fu_320_p0() {
    mul_ln359_1_fu_320_p0 =  (sc_lv<9>) (mul_ln359_1_fu_320_p00.read());
}

void kerneldl_forward_1::thread_mul_ln359_1_fu_320_p00() {
    mul_ln359_1_fu_320_p00 = esl_zext<16,9>(select_ln359_1_reg_483.read());
}

void kerneldl_forward_1::thread_mul_ln359_1_fu_320_p2() {
    mul_ln359_1_fu_320_p2 = (!mul_ln359_1_fu_320_p0.read().is_01() || !ap_const_lv16_68.is_01())? sc_lv<16>(): sc_biguint<9>(mul_ln359_1_fu_320_p0.read()) * sc_biguint<16>(ap_const_lv16_68);
}

void kerneldl_forward_1::thread_out_r_address0() {
    out_r_address0 = out_addr_reg_504.read();
}

void kerneldl_forward_1::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_out_r_d0() {
    out_r_d0 = tmp_reg_591.read();
}

void kerneldl_forward_1::thread_out_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void kerneldl_forward_1::thread_select_ln359_1_fu_302_p3() {
    select_ln359_1_fu_302_p3 = (!icmp_ln361_fu_282_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln361_fu_282_p2.read()[0].to_bool())? add_ln356_1_fu_296_p2.read(): nk_0_reg_177.read());
}

void kerneldl_forward_1::thread_select_ln359_fu_288_p3() {
    select_ln359_fu_288_p3 = (!icmp_ln361_fu_282_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln361_fu_282_p2.read()[0].to_bool())? ap_const_lv10_0: j_reg_188.read());
}

void kerneldl_forward_1::thread_select_ln364_1_fu_362_p3() {
    select_ln364_1_fu_362_p3 = (!icmp_ln367_fu_342_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln367_fu_342_p2.read()[0].to_bool())? add_ln364_1_fu_356_p2.read(): ap_phi_mux_t_0_phi_fu_214_p4.read());
}

void kerneldl_forward_1::thread_select_ln364_fu_348_p3() {
    select_ln364_fu_348_p3 = (!icmp_ln367_fu_342_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln367_fu_342_p2.read()[0].to_bool())? ap_const_lv5_0: ap_phi_mux_k_0_phi_fu_237_p4.read());
}

void kerneldl_forward_1::thread_shl_ln_fu_385_p3() {
    shl_ln_fu_385_p3 = esl_concat<10,2>(add_ln369_fu_380_p2.read(), ap_const_lv2_0);
}

void kerneldl_forward_1::thread_zext_ln351_fu_265_p1() {
    zext_ln351_fu_265_p1 = esl_zext<64,12>(i_0_reg_155.read());
}

void kerneldl_forward_1::thread_zext_ln363_fu_326_p1() {
    zext_ln363_fu_326_p1 = esl_zext<64,19>(grp_fu_430_p3.read());
}

void kerneldl_forward_1::thread_zext_ln364_fu_374_p1() {
    zext_ln364_fu_374_p1 = esl_zext<12,3>(select_ln364_1_reg_525.read());
}

void kerneldl_forward_1::thread_zext_ln369_1_fu_399_p1() {
    zext_ln369_1_fu_399_p1 = esl_zext<64,12>(add_ln369_1_fu_393_p2.read());
}

void kerneldl_forward_1::thread_zext_ln369_2_fu_412_p1() {
    zext_ln369_2_fu_412_p1 = esl_zext<64,16>(grp_fu_439_p3.read());
}

void kerneldl_forward_1::thread_zext_ln369_fu_377_p1() {
    zext_ln369_fu_377_p1 = esl_zext<10,5>(select_ln364_reg_518.read());
}

void kerneldl_forward_1::thread_zext_ln372_fu_421_p1() {
    zext_ln372_fu_421_p1 = esl_zext<64,10>(select_ln359_reg_475.read());
}

void kerneldl_forward_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln349_fu_253_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln349_fu_253_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln356_fu_270_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln364_fu_330_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln364_fu_330_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            }
            break;
        case 2048 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            }
            break;
        case 4096 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            }
            break;
        case 8192 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

